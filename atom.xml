<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Guirec Corbel]]></title>
  <link href="http://GCorbel.github.io/blog/atom.xml" rel="self"/>
  <link href="http://GCorbel.github.io/blog/"/>
  <updated>2015-06-05T06:37:34-04:00</updated>
  <id>http://GCorbel.github.io/blog/</id>
  <author>
    <name><![CDATA[Guirec Corbel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Benchmark : Clever Cloud vs Scalingo]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/06/01/benchmark-clever-cloud-vs-scalingo/"/>
    <updated>2015-06-01T02:41:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/06/01/benchmark-clever-cloud-vs-scalingo</id>
    <content type="html"><![CDATA[<p>Scalingo et Clever Cloud sont deux entreprises françaises proposant des
services d&#8217;hébergement dans le cloud. Celles-ci proposent de retirer la gestion
des serveurs aux développeurs et ceux avec un bon nombre de technologies comme
Ruby, Go, Python ou PHP. Après avoir mis à l&#8217;épreuve Heroku, Digital Ocean et
Scalingo, j&#8217;ai pu déterminer que Scalingo offrait la meilleure performance des
trois. Qu&#8217;en est-il de Clever Cloud ?</p>

<h2>Avant propos</h2>

<p>Cet article se base sur <a href="http://gcorbel.github.io/blog/blog/2015/04/12/benchmark-digital-ocean-vs-scalingo/">l&#8217;article précédent</a>. L&#8217;application testée, le code
ainsi que les pages testées sont les mêmes que celles utilisées pour faire la
comparaison entre Digital Ocean et Scalingo.</p>

<p><strong>Je ne suis toujours pas administrateur système</strong>. Si vous constatez des
irrégularités dans mes tests, n&#8217;hésitez pas à m&#8217;en faire part et je les
corrigerais. Cependant, je pense utiliser une méthode simple se basant sur des
faits afin d&#8217;avoir une analyse pertinente.</p>

<h2>L&#8217;application</h2>

<p><a href="http://www.associatedartcollectors.com/">Les Collectionneurs Associés</a> est une application Rails qui n&#8217;a pas été conçue uniquement pour des tests. Cela nous
donne une meilleure idée du comportement des serveurs dans la réalité.</p>

<h2>Les serveurs</h2>

<p>L&#8217;offre la plus petite de Clever Cloud coûte 14,40€ par mois. Pour ce prix,
nous avons 1 CPU et 1Gb de RAM. Pour le même prix, chez Scalingo, nous avons
une machine avec 1CPU et  512Mb de RAM. Cependant, avec Scalingo, il est
possible de descendre plus bas avec 256Mb pour 7,20€. J&#8217;ai choisi de prendre
l&#8217;offre à 14,40€ dans les deux entreprises. Les deux serveurs se trouvent en
France.</p>

<p>Le serveur à partir duquel je fais mes tests est un serveur fourni par
Digital Ocean situé à Londres. Il est donc représentatif des clients de
l&#8217;Europe de l&#8217;Ouest, incluant la France, évidemment.</p>

<h2>Le code</h2>

<p>Le code n&#8217;est probablement pas le meilleur que j&#8217;ai écrit de ma vie, mais est
largement suffisant pour faire ce que je souhaitais.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;net/http&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;openssl&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">NUMBER_OF_THREADS</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="no">NUMBER_OF_REQUESTS_PER_THREAD</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="no">URL</span> <span class="o">=</span> <span class="s1">&#39;https://stagingcollectionneurs.scalingo.io/fr/provider_registrations/new&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">threads</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="no">NUMBER_OF_THREADS</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">threads</span> <span class="o">&lt;&lt;</span> <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>      <span class="n">x</span><span class="o">.</span><span class="n">report</span> <span class="k">do</span>
</span><span class='line'>        <span class="no">NUMBER_OF_REQUESTS_PER_THREAD</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>          <span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="p">(</span><span class="no">URL</span><span class="p">)</span>
</span><span class='line'>          <span class="n">http</span> <span class="o">=</span> <span class="ss">Net</span><span class="p">:</span><span class="ss">:HTTP</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">host</span><span class="p">,</span> <span class="n">uri</span><span class="o">.</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>          <span class="n">http</span><span class="o">.</span><span class="n">use_ssl</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>          <span class="n">http</span><span class="o">.</span><span class="n">verify_mode</span> <span class="o">=</span> <span class="ss">OpenSSL</span><span class="p">:</span><span class="ss">:SSL</span><span class="o">::</span><span class="no">VERIFY_NONE</span>
</span><span class='line'>          <span class="n">http</span><span class="o">.</span><span class="n">start</span> <span class="k">do</span>
</span><span class='line'>            <span class="n">http</span><span class="o">.</span><span class="n">request_get</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">path</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">res</span><span class="o">|</span>
</span><span class='line'>              <span class="nb">p</span> <span class="n">res</span><span class="o">.</span><span class="n">code</span> <span class="o">+</span> <span class="s2">&quot; : &quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ce code permet d&#8217;entrer une adresse et de simuler un certain nombre de
visites concurrentes faisant un certain nombre de requêtes. À la fin de
l&#8217;exécution du programme, le temps de réponse de chaque processus est affiché.
Ce code ne prend pas en compte le chargement des images et des assets. Dans mon
cas, ces éléments sont stockés sur un CDN et sont donc indépendants du serveur
où l&#8217;application se trouve.</p>

<h2>Test 1</h2>

<p>Ce premier test affiche une page simple avec 11 requêtes. Voici les temps de
réponse :</p>

<p>Scalingo :</p>

<pre><code>  126.364873
  126.482741
  126.609597
  126.741594
  126.857076
  126.988266
  127.107123
  127.235066
  127.356753
  127.469629
</code></pre>

<p>Clever Cloud :</p>

<pre><code>  127.890590
  128.021063
  128.147565
  128.274117
  128.400284
  128.528602
  128.655974
  128.777820
  128.897637
  129.032317
</code></pre>

<p>Pour ce test, on s&#8217;aperçoit que les résultats sont quasiment identiques. La
différence de 2 secondes est, pour moi, négligeable.</p>

<h2>Test 2</h2>

<p>Pour continuer, j&#8217;ai réexécuté le programme sur une page plus complexe. Voici
le résultat :</p>

<p>Scalingo :</p>

<pre><code>  762.209817
  762.938170
  763.748126
  764.493016
  765.395998
  766.176983
  767.026748
  767.746600
  768.578646
  769.388282
</code></pre>

<p>Clever Cloud :</p>

<pre><code>  766.513019
  767.324059
  768.050523
  768.837619
  769.624915
  770.354487
  771.162319
  771.894288
  772.703604
  773.544202
</code></pre>

<p>Encore une fois, la différence des temps de réponse est négligeable. Pour le
moment, les performances de l&#8217;application hébergée sur les serveurs des deux
entreprises sont équivalentes.</p>

<h2>Test 3</h2>

<p>J&#8217;ai voulu poursuivre avec la page d&#8217;inscription, plus complexe.</p>

<p>Scalingo :</p>

<pre><code>  415.211191
  415.640399
  416.049001
  416.437286
  416.847855
  417.337447
  417.744488
  418.145630
  418.528678
  418.999209
</code></pre>

<p>Clever Cloud :</p>

<pre><code>  356.496478
  356.825021
  357.213072
  357.562785
  357.917548
  358.310875
  358.650679
  358.991046
  359.396792
  359.738898
</code></pre>

<p>Clever Cloud est légèrement plus rapide et, pour moi, ces résultats permettent
de rattraper les légers retards enregistrés précédemment.</p>

<h2>Conclusion</h2>

<p>Voici une conclusion très ennuyante pour un article comparatif : les
performances des deux offres sont équivalentes. Ces résultats ne me permettent
pas de trancher entre l&#8217;un et l&#8217;autre.</p>

<p>Les deux entreprises offrent un
très bon support, leurs interfaces d&#8217;administration sont très bien faites et
l&#8217;utilisation est deux systèmes est très simple. Pour choisir, il n&#8217;y a pas
d&#8217;autre solution que de tester vous-même et de faire votre propre opinion, kit
à vous baser sur des notions plus subjectives.</p>

<p>Malgré tout, à la fois Scalingo et Clever Cloud sont plus performants qu&#8217;Heroku
et Digital Ocean. Je leur donne une position qui serait décevante aux JO, la
médaille d&#8217;or exequo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Benchmark : Digital Ocean vs Scalingo]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/04/12/benchmark-digital-ocean-vs-scalingo/"/>
    <updated>2015-04-12T08:48:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/04/12/benchmark-digital-ocean-vs-scalingo</id>
    <content type="html"><![CDATA[<p>Il y a peu, j&#8217;ai parlé avec Yann Klis, de <a href="https://scalingo.com/">Scalingo</a>, sur <a href="https://forum.humancoders.com/t/heroku-en-production/1384/4">le forum de Human Coders</a>. Suite à
cette discussion, j&#8217;ai souhaité effectuer un benchmark pour comparer les
performances de Digital Ocean et de Scalingo. Dans cet article, je vais exposer
les résultats des tests ainsi que ma méthodologie.</p>

<h2>L&#8217;application</h2>

<p>Voici l&#8217;application testée : <a href="https://www.associatedartcollectors.com/fr.">https://www.associatedartcollectors.com/fr.</a>
Il s&#8217;agit d&#8217;une application Rails optimisée, avec un système de mise
en cache, des assets sur un CDN, etc. Il s&#8217;agit d&#8217;une vraie application
(encore en développement). J&#8217;ai préféré l&#8217;utiliser plutôt que d&#8217;en faire une
uniquement pour des tests afin de mieux représenter la réalité.</p>

<h2>Les serveurs</h2>

<p>Le serveur Digital Ocean est situé à Francfort et coûte 10$ par mois pour
1Go de RAM. Scalingo, quant à lui, est situé en France et coûte 14.40€ pour
512Mb. Scalingo est donc légèrement plus cher pour moins de puissance.</p>

<p>Scalingo étant beaucoup plus facile à gérer, je pense que le temps économisé
au niveau de la gestion du serveur vaut largement le léger surplus de prix. En
effet, dans son utilisation, Scalingo ressemble davantage à Heroku qu&#8217;a Digital
Ocean. J&#8217;ai choisi de ne pas comparer Scalingo à Heroku, car, selon de
précédents tests, Digital Ocean offre une meilleure performance. J&#8217;ai voulu
comparer Scalingo au meilleur.</p>

<h2>Note</h2>

<p><strong>Je ne suis pas administrateur système</strong>. Il est probablement possible de faire
mieux que ce que j&#8217;ai fait sur Digital Ocean. Ceci dit, je suis probablement
dans la même situation qu&#8217;un bon nombre de développeurs. L&#8217;intérêt des systèmes
similaires à Heroku ou Scalingo est également ne pas s&#8217;occuper du système. On
créer l&#8217;application en 2 minutes, on pousse l&#8217;application et ça marche. C&#8217;est
tout.</p>

<h2>Les tests</h2>

<p>La plus grosse part de marché de Scalingo est située en France. J&#8217;ai souhaité
commencer mes tests proches de la France. Pour cela, j&#8217;ai choisi de créer un
droplet Digital Ocean à Londres.</p>

<p>Mon objectif a été de simuler un certain nombre de requêtes et ceux de manière
concurrente. J&#8217;ai donc créé un code qui lance plusieurs processus
simultanément. Chaque processus effectue un certain nombre de requêtes. Le
temps effectué par chaque processus permet de comparer la performance. Plus les
requêtes se sont complétées rapidement, plus le serveur est efficace.</p>

<h2>Le code</h2>

<p>Le code n&#8217;est probablement pas le meilleur que j&#8217;ai écrit de ma vie, mais est
largement suffisant pour faire ce que je souhaitais.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;benchmark&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;net/http&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;openssl&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">NUMBER_OF_THREADS</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="no">NUMBER_OF_REQUESTS_PER_THREAD</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="no">URL</span> <span class="o">=</span> <span class="s1">&#39;https://stagingcollectionneurs.scalingo.io/fr/provider_registrations/new&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">threads</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="no">NUMBER_OF_THREADS</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">threads</span> <span class="o">&lt;&lt;</span> <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Benchmark</span><span class="o">.</span><span class="n">bm</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>      <span class="n">x</span><span class="o">.</span><span class="n">report</span> <span class="k">do</span>
</span><span class='line'>        <span class="no">NUMBER_OF_REQUESTS_PER_THREAD</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>          <span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="p">(</span><span class="no">URL</span><span class="p">)</span>
</span><span class='line'>          <span class="n">http</span> <span class="o">=</span> <span class="ss">Net</span><span class="p">:</span><span class="ss">:HTTP</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">host</span><span class="p">,</span> <span class="n">uri</span><span class="o">.</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>          <span class="n">http</span><span class="o">.</span><span class="n">use_ssl</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>          <span class="n">http</span><span class="o">.</span><span class="n">verify_mode</span> <span class="o">=</span> <span class="ss">OpenSSL</span><span class="p">:</span><span class="ss">:SSL</span><span class="o">::</span><span class="no">VERIFY_NONE</span>
</span><span class='line'>          <span class="n">http</span><span class="o">.</span><span class="n">start</span> <span class="k">do</span>
</span><span class='line'>            <span class="n">http</span><span class="o">.</span><span class="n">request_get</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">path</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">res</span><span class="o">|</span>
</span><span class='line'>              <span class="nb">p</span> <span class="n">res</span><span class="o">.</span><span class="n">code</span> <span class="o">+</span> <span class="s2">&quot; : &quot;</span> <span class="o">+</span> <span class="n">i</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ce code permet d&#8217;entrer un nombre de processus simultané et le nombre de requêtes
fait pour chaque processus. De plus, il permet d&#8217;indiquer la page appelée par
le code. Pour les tests, j&#8217;ai choisi des pages différentes qui sont
représentatives de l&#8217;application.</p>

<p>Le code permet également d&#8217;afficher le statut de la requête envoyé, afin de
s&#8217;assurer qu&#8217;elles sont toutes valides, ainsi que le numéro de la requête
effectuée, juste pour voir la progression.</p>

<p>J&#8217;ai eu un problème avec le protocole SSL sur Digital Ocean. Pour le test, j&#8217;ai
simplement désactivé la vérification.</p>

<h2>Test 1</h2>

<p>Le premier test consiste uniquement à visiter une page. Pour l&#8217;affichage de
cette page, 11 requêtes SQL sont exécutées.</p>

<p>Digital Ocean :</p>

<pre><code>Threads : 10
Requests per thread : 100

Temps de réponse :
  163.755285
  163.906003
  164.070419
  164.222361
  164.379131
  164.520751
  164.717367
  164.894695
  165.059584
  165.245484
</code></pre>

<p>Scalingo :</p>

<pre><code>Threads : 10
Requests per thread : 100

Temps de réponse :
  110.868637
  110.982509
  111.086731
  111.195775
  111.377322
  111.482194
  111.590034
  111.697870
  111.821420
  111.938271
</code></pre>

<p>Ce premier test montre clairement que Scalingo offre un temps de réponse plus
rapide. Scalingo est quasiment deux fois plus rapide.</p>

<h2>Test 2</h2>

<p>Dans ce deuxième test, j&#8217;ai voulu tester le comportement avec plus de requêtes
concurrentes.</p>

<p>Digital Ocean :</p>

<pre><code>Threads : 100
Requests per thread : 10

Temps de réponse :
  150.062375
  150.365437
  150.532612
  165.780870
  165.941798
  166.111019
</code></pre>

<p>Scalingo :</p>

<pre><code>Threads : 100
Requests per thread : 10

Temps de réponse :
   92.787676
   92.877818
   92.959175
  ...
  102.423316
  102.525122
  102.622236
</code></pre>

<p>Encore cette fois, Scalingo est nettement supérieur. Pendant que les tests
s&#8217;effectuaient, je suis allé sur les deux sites avec mon navigateur. Même si cela
ne se reflète par sur les résultats du benchmark, j&#8217;ai constaté une grande
dégradation de performance pour les deux fournisseurs.</p>

<h2>Test 3</h2>

<p>Par la suite, j&#8217;ai souhaité tester une autre page un peu plus complexe. Sur
cette page, plus de requêtes SQL sont effectuées et il y a plus de code à
exécuter.</p>

<p>Digital Ocean :</p>

<pre><code>Thread : 10
Request : 100

Temps de réponse :
  204.311959
  204.509295
  204.683958
  204.864534
  205.055946
  205.240614
  205.440767
  205.621924
  205.807302
  206.020173
</code></pre>

<p>Scalingo :</p>

<pre><code>Thread : 10
Request : 100

Temps de réponse :
  143.032002
  143.170704
  143.322095
  143.458987
  143.596800
  143.742877
  143.877174
  144.017422
  144.161915
  144.303397
</code></pre>

<p>Sans surprise, le résultat est le même dans ce cas.</p>

<h2>Test 4</h2>

<p>Enfin, j&#8217;ai voulu tester une page encore plus complexe. Il s&#8217;agit du
formulaire d&#8217;inscription d&#8217;un utilisateur. J&#8217;utilise des gems comme SimpleForm
pour gérer le formulaire. Les listes des services, des pays et des régions
sont disponibles ce qui correspond à autant de requête SQL et de donnée à
traiter.</p>

<p>Digital Ocean :</p>

<pre><code>Thread : 10
Request : 100

Temps de réponse :
  420.542306
  420.998163
  421.375207
  421.724786
  422.231918
  422.618054
  422.983907
  423.442330
  423.815438
  424.163915
</code></pre>

<p>Scalingo :</p>

<pre><code>Thread : 10
Request : 100

Temps de réponse :
  669.174683
  669.800881
  670.571744
  671.256995
  671.949939
  672.582819
  673.282322
  673.983594
  674.634513
  675.310771
</code></pre>

<p>Cette fois, Digital Ocean est plus rapide. Je pense que c&#8217;est là que la
différence de puissance du serveur se fait sentir. Étant donné qu&#8217;il y a plus
de code a exécuter, le traitement nécessite plus de ressource, et donc, Digital
Ocean est avantagé. Ceci dit, cette page n&#8217;est pas l&#8217;une des plus utilisées et
je pense que la performance est plus importante pour les pages permettant
uniquement l&#8217;affichage.</p>

<h2>Conclusion</h2>

<p>Je pense que Scalingo gagne le duel. En plus d&#8217;offrir une performance plus
qu&#8217;honorable, la gestion du serveur est grandement simplifiée. Je conseille
vivement d&#8217;essayer cet outil si vous n&#8217;avez pas besoin d&#8217;avoir un accès complet
à la machine. Comme moi, les développeurs ne sont pas toujours des
administrateurs systèmes. Je trouve beaucoup plus simple de laisser la gestion
du serveur à quelqu&#8217;un d&#8217;autre. En plus d&#8217;être probablement mieux configuré que
ce que j&#8217;ai fait, c&#8217;est également plus sécuritaire, car, si une faille de
sécurité est découverte, le problème sera géré par des professionnels dans le
domaine.</p>

<p>Pour cet article, mes tests ont été effectués depuis Londres afin de
représenter la clientèle européenne. Pour ma part, je me situe au Québec. Dans
une seconde étape, je vais tester depuis des serveurs en Amérique du Nord et à
partir d&#8217;autres endroits dans le monde pour observer le comportement selon
les lieux.</p>

<p>Dans un prochain article, je vais faire la comparaison entre Clever Cloud et
Scalingo. Surveillez mes prochains articles pour connaitre les résultats de mon
prochain benchmark.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comment ça marche : Le coeur d'ActiveRecord]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/03/03/comment-ca-marche-le-coeur-dactiverecord/"/>
    <updated>2015-03-03T16:55:00-05:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/03/03/comment-ca-marche-le-coeur-dactiverecord</id>
    <content type="html"><![CDATA[<p>Il y a quelque temps, je me suis lancé dans la lecture du code source de
Rails. Mon but étant de mieux comprendre son mécanisme et, peut-être, de
devenir un contributeur. J&#8217;ai choisi de commencer par ActiveRecord étant donné
que je trouve que c&#8217;est le module le plus &ldquo;magique&rdquo; de Rails. J&#8217;ai donc voulu
comprendre mieux cette magie apparente. Dans cet article, je vais tenter de
comprendre et d&#8217;expliquer ce qu&#8217;il se cache derrière <code>ActiveRecord::Base</code> ainsi
que le noyau d&#8217;ActiveRecord.</p>

<p>Comme dans les articles précédents, je vais utiliser <a href="http://gcorbel.github.io/blog/blog/2015/01/20/exploration-avec-pry/">Pry pour
explorer</a>. Je vous conseille fortement de lire le code en même temps que l&#8217;article.</p>

<p>Pour commencer, je vais reprendre
<a href="https://github.com/rails/rails/blob/master/guides/bug_report_templates/active_record_master.rb">le code servant à créer des issues</a>
dans ActiveRecord en y plaçant un breakpoint afin de pouvoir étudier le
comportement du modèle.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">unless</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="s1">&#39;Gemfile&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;Gemfile&#39;</span><span class="p">,</span> <span class="o">&lt;&lt;-</span><span class="no">GEMFILE</span><span class="p">)</span>
</span><span class='line'><span class="sh">    source &#39;https://rubygems.org&#39;</span>
</span><span class='line'><span class="sh">    gem &#39;rails&#39;, github: &#39;rails/rails&#39;, ref: &#39;6a7ac40dab&#39;</span>
</span><span class='line'><span class="sh">    gem &#39;arel&#39;, github: &#39;rails/arel&#39;</span>
</span><span class='line'><span class="sh">    gem &#39;sqlite3&#39;</span>
</span><span class='line'><span class="sh">    gem &#39;pry-byebug&#39;</span>
</span><span class='line'><span class="no">  GEMFILE</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">system</span> <span class="s1">&#39;bundle&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;bundler&#39;</span>
</span><span class='line'><span class="no">Bundler</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span><span class="ss">:default</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;minitest/autorun&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;logger&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># This connection will do for database-independent bug reports.</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;:memory:&#39;</span><span class="p">)</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">logger</span> <span class="o">=</span> <span class="no">Logger</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">STDOUT</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Schema</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">create_table</span> <span class="ss">:posts</span><span class="p">,</span> <span class="ss">force</span><span class="p">:</span> <span class="kp">true</span>  <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">create_table</span> <span class="ss">:comments</span><span class="p">,</span> <span class="ss">force</span><span class="p">:</span> <span class="kp">true</span>  <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>    <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:post_id</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pry&#39;</span><span class="p">;</span> <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'><span class="nb">puts</span> <span class="s1">&#39;Just a line to make pry stop&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ActiveRecord</h2>

<p>Commençons par le commencement. Lorsque l&#8217;on charge la gem <code>activerecord</code>, le fichier
<a href="https://github.com/rails/rails/blob/master/activerecord/lib/active_record.rb">activerecord.rb</a> est inclus.
Comme on peut le voir en lisant le code, celui-ci commence par chargé ses
dépendances.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/rails&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_model&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;arel&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record/version&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record/attribute_set&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>On comprend donc que <code>ActiveRecord</code> dépend d&#8217;<code>ActiveSupport</code>, <code>ActiveModel</code> et
<code>Arel</code>. <code>ActiveSupport</code> est un module fournissant des fonctions utiles dans les
autres modules de Rails. <code>ActiveModel</code> contient les informations spécifiques au
modèle du design pattern <code>MVC</code> sans contenir les informations relatives à la
base de données. <code>Arel</code>, quant à lui, permet de créer des requêtes SQL en Ruby.</p>

<p>Les premières lignes du module sont les suivantes :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="kp">extend</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Autoload</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">autoload</span> <span class="ss">:Attribute</span>
</span></code></pre></td></tr></table></div></figure>


<p>Plutôt que de faire un <code>require</code>, <code>ActiveRecord</code> utilise le <code>autoload</code>
d&#8217;<code>ActiveSupport</code>. <code>ActiveSupport</code> permet de déterminer le nom du fichier à
charger en incluant le nom du module. Si l&#8217;on appelle <code>autoload :Concern</code> depuis
le module <code>ActiveSupport</code>, &ldquo;active_support/concern&rdquo; est déterminé. Cette chaîne
de caractère est ensuite envoyée à la fonction
<a href="http://ruby-doc.org/core-2.1.0/Module.html#method-i-autoload">autoload</a> de
Ruby. De cette façon, les modules ne sont chargés qu&#8217;au moment où ils sont
appelés. C&#8217;est uniquement lorsque l&#8217;on utilisera <code>ActiveSupport::Concern</code> dont
le fichier sera chargé. Il s&#8217;agit d&#8217;un procédé permettant d&#8217;économiser la
mémoire puisque l&#8217;on ne charge pas ce qui est inutile.</p>

<p>On continuant la lecture du code, on peut s&#8217;apercevoir que certain des modules
sont chargé dans un block <code>eager_load</code>. Les chargements automatiques sont mis
dans un tableau. Les modules contenus dans ce tableau seront chargés quand la
fonction <code>ActiveSupport.eager_load!</code> sera appelée.</p>

<p>Certains des éléments sont chargés dans block <code>autoload_under</code>. Il s&#8217;agit,
simplement, d&#8217;un block ajoutant un dossier au chemin chargé.</p>

<p>Dans le bas du fichier, la fonction <code>eager_load!</code> est définie. Celle-ci permet
de forcer le chargement de sous-modules. Cette fonction à été introduit dans
<a href="https://github.com/rails/rails/commit/2801786e1a51b7cf7d7c3fd72b5fc9974f83f435">ce commit</a>.
D&#8217;après ce que je comprends, ce code peut-être utile quand on fait du
multithreading ou pour être &ldquo;CoW friendly&rdquo;. J&#8217;avoue ne pas savoir ce que veut
dire &ldquo;CoW&rdquo;. Si quelqu&#8217;un peut m&#8217;éclairer, ça me plairait!</p>

<p>La dernière partie consiste en deux &ldquo;hook&rdquo;.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ActiveSupport</span><span class="o">.</span><span class="n">on_load</span><span class="p">(</span><span class="ss">:active_record</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="ss">Arel</span><span class="p">:</span><span class="ss">:Table</span><span class="o">.</span><span class="n">engine</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">ActiveSupport</span><span class="o">.</span><span class="n">on_load</span><span class="p">(</span><span class="ss">:i18n</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">I18n</span><span class="o">.</span><span class="n">load_path</span> <span class="o">&lt;&lt;</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;/active_record/locale/en.yml&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ces appels vont activer des événements stockés dans des tableaux puis stock à
nouveau pour une utilisation ultérieure.</p>

<h2>ActiveRecord::Base</h2>

<p>Tous les développeurs utilisant Ruby on Rails ont probablement fait un modèle
héritant de <code>ActiveRecord::Base</code>. Quand on regarde le fichier
<a href="https://github.com/rails/rails/blob/master/activerecord/lib/active_record/base.rb">base.rb</a>,
on s&#8217;aperçoit qu&#8217;il s&#8217;agit uniquement d&#8217;un fichier en incluant d&#8217;autres et
faisant des <code>include</code> et des <code>extend</code> d&#8217;autres modules. Deux lignes sont
intéressantes, <code>ActiveSupport.run_load_hooks(:active_record, Base)</code> et <code>include
Core</code>.</p>

<p>L&#8217;avant-dernière ligne exécute les événements stockés précédemment.
<code>ActiveRecord</code> est donc indiqué comme étant le moteur par défaut de <code>Arel</code>.</p>

<h2>Conclusion</h2>

<p>Voici donc le coeur d&#8217;ActiveRecord. Je vais tenter de poursuivre ma lecture du
code et j&#8217;exposerai mes découvertes dans de prochains articles.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comment ça marche : Les associations dans ActiveRecord]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/02/14/comment-ca-marche-les-associations-dans-activerecord/"/>
    <updated>2015-02-14T11:33:00-05:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/02/14/comment-ca-marche-les-associations-dans-activerecord</id>
    <content type="html"><![CDATA[<p>Les associations sont une part importante d&#8217;ActiveRecord. Il s&#8217;agit d&#8217;éléments
que l&#8217;on utilise dans les premières phases d&#8217;apprentissage de Rails. Bien que
son utilisation soit simple, l&#8217;implémentation est assez compliquée. Je vous
propose d&#8217;explorer le fonctionnement en observant le code exécuté à l&#8217;appel de
l&#8217;association <code>belongs_to</code> afin de comprendre le mécanisme complexe.</p>

<!--more-->


<p>Dans cet article, je vais utiliser <a href="http://gcorbel.github.io/blog/blog/2015/01/20/exploration-avec-pry/">Pry pour explorer</a>.
Je vous conseille de suivre l&#8217;exécution du code tout en lisant l&#8217;article. Cela
vous permettra d&#8217;avoir accès aux détails à votre guise. J&#8217;utilise la version la
plus récente lors de l&#8217;écriture de cette article, le 15 février 2015. La
version de Rails à la date de votre lecture peut être différente. Vous devez
spécifier le commit &ldquo;6a7ac40dab&rdquo; si vous faite un clone de Rails et
<a href="https://github.com/rails/rails/tree/6a7ac40dabf4a8948418c61f307ffe52ddcb48f2">ce lien</a>
pour explorer sur Github.</p>

<p>Comme point de départ, je vous propose de reprendre <a href="https://github.com/rails/rails/blob/master/guides/bug_report_templates/active_record_master.rb">le code servant à créer des issues</a> dans ActiveRecord légèrement modifié.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">unless</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="s1">&#39;Gemfile&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;Gemfile&#39;</span><span class="p">,</span> <span class="o">&lt;&lt;-</span><span class="no">GEMFILE</span><span class="p">)</span>
</span><span class='line'><span class="sh">    source &#39;https://rubygems.org&#39;</span>
</span><span class='line'><span class="sh">    gem &#39;rails&#39;, github: &#39;rails/rails&#39;, ref: &#39;6a7ac40dab&#39;</span>
</span><span class='line'><span class="sh">    gem &#39;arel&#39;, github: &#39;rails/arel&#39;</span>
</span><span class='line'><span class="sh">    gem &#39;sqlite3&#39;</span>
</span><span class='line'><span class="sh">    gem &#39;pry-byebug&#39;</span>
</span><span class='line'><span class="no">  GEMFILE</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">system</span> <span class="s1">&#39;bundle&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;bundler&#39;</span>
</span><span class='line'><span class="no">Bundler</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span><span class="ss">:default</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;minitest/autorun&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;logger&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># This connection will do for database-independent bug reports.</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;:memory:&#39;</span><span class="p">)</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">logger</span> <span class="o">=</span> <span class="no">Logger</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">STDOUT</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Schema</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">create_table</span> <span class="ss">:posts</span><span class="p">,</span> <span class="ss">force</span><span class="p">:</span> <span class="kp">true</span>  <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">create_table</span> <span class="ss">:comments</span><span class="p">,</span> <span class="ss">force</span><span class="p">:</span> <span class="kp">true</span>  <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>    <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:post_id</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;pry&#39;</span><span class="p">;</span> <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:comments</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Comment</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:post</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">BugTest</span> <span class="o">&lt;</span> <span class="ss">Minitest</span><span class="p">:</span><span class="ss">:Test</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">test_association_stuff</span>
</span><span class='line'>    <span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">create!</span>
</span><span class='line'>    <span class="n">post</span><span class="o">.</span><span class="n">comments</span> <span class="o">&lt;&lt;</span> <span class="no">Comment</span><span class="o">.</span><span class="n">create!</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">post</span><span class="o">.</span><span class="n">comments</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Au lancement du programme, Pry stop l&#8217;exécution. Nous pouvons ainsi entrer dans
le code d&#8217;ActiveRecord par le module <code>ActiveRecord::Associations</code>. Plus de 1000 lignes de
commentaires sont disponibles pour expliquer les utilisations possibles de la
méthode.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">1265</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="no">ClassMethods</span><span class="c1">#has_many:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">1264</span><span class="p">:</span> <span class="k">def</span> <span class="nf">has_many</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">scope</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="o">&amp;</span><span class="n">extension</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">1265</span><span class="p">:</span>   <span class="n">reflection</span> <span class="o">=</span> <span class="ss">Builder</span><span class="p">:</span><span class="ss">:HasMany</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">extension</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">1266</span><span class="p">:</span>   <span class="no">Reflection</span><span class="o">.</span><span class="n">add_reflection</span> <span class="nb">self</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">1267</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cette méthode de seulement deux lignes peut paraître simple mais la complexité
est cachée dans la méthode <code>build</code>, de classe
<code>ActiveRecord::Associations::Builder::HasMany</code>. Tout les arguments lui sont
transmis avec, en plus, <code>self</code>, correspondant à la classe du modèle, <code>Post</code> dans
notre cas.</p>

<p>La classe <code>ActiveRecord::Associations::Builder::HasMany</code> fournit des
informations basiques sur l&#8217;association, c&#8217;est-à-dire son nom et les options
disponibles.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActiveRecord::Associations::Builder</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">HasMany</span> <span class="o">&lt;</span> <span class="no">CollectionAssociation</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">macro</span>
</span><span class='line'>      <span class="ss">:has_many</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">valid_options</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>      <span class="k">super</span> <span class="o">+</span> <span class="o">[</span><span class="ss">:primary_key</span><span class="p">,</span> <span class="ss">:dependent</span><span class="p">,</span> <span class="ss">:as</span><span class="p">,</span> <span class="ss">:through</span><span class="p">,</span> <span class="ss">:source</span><span class="p">,</span> <span class="ss">:source_type</span><span class="p">,</span> <span class="ss">:inverse_of</span><span class="p">,</span> <span class="ss">:counter_cache</span><span class="p">,</span> <span class="ss">:join_table</span><span class="p">,</span> <span class="ss">:foreign_type</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">valid_dependent_options</span>
</span><span class='line'>      <span class="o">[</span><span class="ss">:destroy</span><span class="p">,</span> <span class="ss">:delete_all</span><span class="p">,</span> <span class="ss">:nullify</span><span class="p">,</span> <span class="ss">:restrict_with_error</span><span class="p">,</span> <span class="ss">:restrict_with_exception</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Les informations fournies sont utiles pour les classes parentes. En effet, la
classe hérite de
<code>ActiveRecord::Associations::Builder::CollectionAssociation::CollectionAssociation</code>,
qui hérite de <code>ActiveRecord::Associations::Builder::Association</code>.</p>

<p>Le coeur du traitement se trouve dans la méthode <code>build</code> de la classe
<code>ActiveRecord::Associations::Builder::Association</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">6</span><span class="n">a7ac40dabf4</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">22</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">build</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">21</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">build</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">22</span><span class="p">:</span>   <span class="k">if</span> <span class="n">model</span><span class="o">.</span><span class="n">dangerous_attribute_method?</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">23</span><span class="p">:</span>     <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;You tried to define an association named </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> on the model </span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">, but &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span>                          <span class="s2">&quot;this will conflict with a method </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> already defined by Active Record. &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">25</span><span class="p">:</span>                          <span class="s2">&quot;Please choose a different association name.&quot;</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">28</span><span class="p">:</span>   <span class="n">extension</span> <span class="o">=</span> <span class="n">define_extensions</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span>   <span class="n">reflection</span> <span class="o">=</span> <span class="n">create_reflection</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">extension</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span>   <span class="n">define_accessors</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">31</span><span class="p">:</span>   <span class="n">define_callbacks</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span>   <span class="n">define_validations</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">33</span><span class="p">:</span>   <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pour la suite des explications, je vais passer en revue la méthode <code>build</code> ligne
par ligne. Commençons par la première.</p>

<p>La première fonction appelée, <code>model.dangerous_attribute_method?</code> vérifie si le
nom de l&#8217;association n&#8217;est pas une fonction existante dans ActiveRecord, par
exemple, il n&#8217;est possible de créer une association comme <code>belongs_to :save</code>.
Le nom de l&#8217;association ne peut également pas être similaire à une méthode
relative aux IDs, <code>belongs_to :id</code> par exemple.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">6</span><span class="n">a7ac40dabf4</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">22</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">build</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">21</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">build</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">22</span><span class="p">:</span>   <span class="k">if</span> <span class="n">model</span><span class="o">.</span><span class="n">dangerous_attribute_method?</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">23</span><span class="p">:</span>     <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;You tried to define an association named </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> on the model </span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">, but &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span>                          <span class="s2">&quot;this will conflict with a method </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> already defined by Active Record. &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">25</span><span class="p">:</span>                          <span class="s2">&quot;Please choose a different association name.&quot;</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">28</span><span class="p">:</span>   <span class="n">extension</span> <span class="o">=</span> <span class="n">define_extensions</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span>   <span class="n">reflection</span> <span class="o">=</span> <span class="n">create_reflection</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">extension</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span>   <span class="n">define_accessors</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">31</span><span class="p">:</span>   <span class="n">define_callbacks</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span>   <span class="n">define_validations</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">33</span><span class="p">:</span>   <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Comme on peut le voir, <code>build</code> accepte un block qui est transmis à
<code>define_extensions</code>. Le block est passé depuis la définition de l&#8217;association
comme celui-ci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">has_many</span> <span class="ss">:comments</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">recents</span>
</span><span class='line'>      <span class="n">where</span><span class="p">(</span><span class="s2">&quot;created_at &gt; ?&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="o">.</span><span class="n">days</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il sera donc possible d&#8217;utiliser l&#8217;association comme ainsi :
<code>post.comments.recents</code>. Pour plus de détails dans la
<a href="http://guides.rubyonrails.org/association_basics.html#association-extensions">doc officiel</a>.</p>

<p>Les extensions sont définies comme suit :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">6</span><span class="n">a7ac40dabf4</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">collection_association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">25</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:CollectionAssociation</span><span class="o">.</span><span class="n">define_extensions</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">define_extensions</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">25</span><span class="p">:</span>   <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>     <span class="n">extension_module_name</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">demodulize</span><span class="si">}#{</span><span class="nb">name</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">camelize</span><span class="si">}</span><span class="s2">AssociationExtension&quot;</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>     <span class="n">extension</span> <span class="o">=</span> <span class="no">Module</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">&amp;</span><span class="no">Proc</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">28</span><span class="p">:</span>     <span class="n">model</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">const_set</span><span class="p">(</span><span class="n">extension_module_name</span><span class="p">,</span> <span class="n">extension</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>La fonction créer un module avec le block qui est fourni. Comme
son nom l&#8217;indique, <code>extension_module_name</code> contient le nom du module. Celui-ci
est composé du nom du modèle et de celui de l&#8217;association. Dans l&#8217;exemple, nous
obtenons &ldquo;PostCommentsAssociationExtension&rdquo;. Le nouveau module créé grâce à
<code>Module.new(&amp;Proc.new)</code>. Celui-ci est ensuite ajouté au code de l&#8217;application
afin d&#8217;être inclus par la suite. Ce module a pour but de recevoir les méthodes
qui vont être créées par la suite. Je trouve que c&#8217;est un moyen très astucieux
pour isoler ces méthodes.</p>

<p>Nous pouvons donc passer à la suite.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">6</span><span class="n">a7ac40dabf4</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">22</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">build</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">21</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">build</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">22</span><span class="p">:</span>   <span class="k">if</span> <span class="n">model</span><span class="o">.</span><span class="n">dangerous_attribute_method?</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">23</span><span class="p">:</span>     <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;You tried to define an association named </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> on the model </span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">, but &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span>                          <span class="s2">&quot;this will conflict with a method </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> already defined by Active Record. &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">25</span><span class="p">:</span>                          <span class="s2">&quot;Please choose a different association name.&quot;</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">28</span><span class="p">:</span>   <span class="n">extension</span> <span class="o">=</span> <span class="n">define_extensions</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">29</span><span class="p">:</span>   <span class="n">reflection</span> <span class="o">=</span> <span class="n">create_reflection</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">extension</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span>   <span class="n">define_accessors</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">31</span><span class="p">:</span>   <span class="n">define_callbacks</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span>   <span class="n">define_validations</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">33</span><span class="p">:</span>   <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Je pense que la méthode <code>create_reflection</code> est la plus compliquée. Celle-ci
a pour but de créer un objet qui va contenir les informations relatives à l&#8217;association.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">37</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">create_reflection</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">36</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">create_reflection</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">extension</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">37</span><span class="p">:</span>   <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;association names must be a Symbol&quot;</span> <span class="k">unless</span> <span class="nb">name</span><span class="o">.</span><span class="n">kind_of?</span><span class="p">(</span><span class="no">Symbol</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">38</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">39</span><span class="p">:</span>   <span class="k">if</span> <span class="n">scope</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Hash</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">40</span><span class="p">:</span>     <span class="n">options</span> <span class="o">=</span> <span class="n">scope</span>
</span><span class='line'>    <span class="mi">41</span><span class="p">:</span>     <span class="n">scope</span>   <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>    <span class="mi">42</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">43</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">44</span><span class="p">:</span>   <span class="n">validate_options</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">45</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">46</span><span class="p">:</span>   <span class="n">scope</span> <span class="o">=</span> <span class="n">build_scope</span><span class="p">(</span><span class="n">scope</span><span class="p">,</span> <span class="n">extension</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">47</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">48</span><span class="p">:</span>   <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Reflection</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">macro</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">49</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>La première ligne renvoi une erreur si l&#8217;on essai de créer une collection avec
autre chose qu&#8217;un <code>Symbol</code>.</p>

<p>Par la suite, on remplace les options par le scope
si c&#8217;est un <code>Hash</code>. Cette partie semble être uniquement un hack. Si <code>scope</code> est
un <code>Hash</code>, c&#8217;est qu&#8217;il s&#8217;agit des options. Lors de la création de
l&#8217;association, il n&#8217;est pas spécifié quel argument représente le scope ou les
options. Il est donc nécessaire de faire ce petit tour de passe-passe pour
les distinguer.</p>

<p><code>validate_options</code> permet de s&#8217;assurer que les options passées à l&#8217;association
sont valides. On ne peut donc pas faire une association comme <code>has_many
:comments, something_invalid: :test</code>. Une erreur sera retournée.</p>

<p>Comme son nom l&#8217;indique, build_scope construit le scope.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">52</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">build_scope</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">51</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">build_scope</span><span class="p">(</span><span class="n">scope</span><span class="p">,</span> <span class="n">extension</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">52</span><span class="p">:</span>   <span class="n">new_scope</span> <span class="o">=</span> <span class="n">scope</span>
</span><span class='line'>    <span class="mi">53</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">54</span><span class="p">:</span>   <span class="k">if</span> <span class="n">scope</span> <span class="o">&amp;&amp;</span> <span class="n">scope</span><span class="o">.</span><span class="n">arity</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="mi">55</span><span class="p">:</span>     <span class="n">new_scope</span> <span class="o">=</span> <span class="nb">proc</span> <span class="p">{</span> <span class="n">instance_exec</span><span class="p">(</span><span class="o">&amp;</span><span class="n">scope</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="mi">56</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">57</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">58</span><span class="p">:</span>   <span class="k">if</span> <span class="n">extension</span>
</span><span class='line'>    <span class="mi">59</span><span class="p">:</span>     <span class="n">new_scope</span> <span class="o">=</span> <span class="n">wrap_scope</span> <span class="n">new_scope</span><span class="p">,</span> <span class="n">extension</span>
</span><span class='line'>    <span class="mi">60</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">61</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">62</span><span class="p">:</span>   <span class="n">new_scope</span>
</span><span class='line'>    <span class="mi">63</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Par défaut, le scope est gradé tel quel. S&#8217;il y a un scope et que celui-ci ne
possède par d&#8217;argument, il est transformé pour être exécuté par l&#8217;instance
plutôt que la classe.</p>

<p>S&#8217;il y a une extension, celle-ci est &ldquo;wrapper&rdquo; comme ceci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">collection_association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">72</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:CollectionAssociation</span><span class="o">.</span><span class="n">wrap_scope</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">71</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">wrap_scope</span><span class="p">(</span><span class="n">scope</span><span class="p">,</span> <span class="n">mod</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">72</span><span class="p">:</span>   <span class="k">if</span> <span class="n">scope</span>
</span><span class='line'>    <span class="mi">73</span><span class="p">:</span>     <span class="nb">proc</span> <span class="p">{</span> <span class="o">|</span><span class="n">owner</span><span class="o">|</span> <span class="n">instance_exec</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">scope</span><span class="p">)</span><span class="o">.</span><span class="n">extending</span><span class="p">(</span><span class="n">mod</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="mi">74</span><span class="p">:</span>   <span class="k">else</span>
</span><span class='line'>    <span class="mi">75</span><span class="p">:</span>     <span class="nb">proc</span> <span class="p">{</span> <span class="n">extending</span><span class="p">(</span><span class="n">mod</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="mi">76</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">77</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Grâce à cette méthode, le module créé précédemment est inclus lors de l&#8217;appel de
la méthode. Cette partie est plutôt complexe et demanderait un article au
complet. Je vais donc laisser cette partie pour le moment.</p>

<p>Après cet interlude, revenons à l&#8217;exécution de <code>create_reflection</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">48</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">create_reflection</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">36</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">create_reflection</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">extension</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">37</span><span class="p">:</span>   <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;association names must be a Symbol&quot;</span> <span class="k">unless</span> <span class="nb">name</span><span class="o">.</span><span class="n">kind_of?</span><span class="p">(</span><span class="no">Symbol</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">38</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">39</span><span class="p">:</span>   <span class="k">if</span> <span class="n">scope</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Hash</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">40</span><span class="p">:</span>     <span class="n">options</span> <span class="o">=</span> <span class="n">scope</span>
</span><span class='line'>    <span class="mi">41</span><span class="p">:</span>     <span class="n">scope</span>   <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>    <span class="mi">42</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">43</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">44</span><span class="p">:</span>   <span class="n">validate_options</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">45</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">46</span><span class="p">:</span>   <span class="n">scope</span> <span class="o">=</span> <span class="n">build_scope</span><span class="p">(</span><span class="n">scope</span><span class="p">,</span> <span class="n">extension</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">47</span><span class="p">:</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">48</span><span class="p">:</span>   <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Reflection</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">macro</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">49</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>La macro (<code>:has_many</code>), celui de l&#8217;association (<code>:comments</code>), le scope, les
options et le modèle sont passés à <code>ActiveRecord::Reflection#create</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">reflection</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">17</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Reflection</span><span class="o">.</span><span class="n">create</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">16</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">create</span><span class="p">(</span><span class="n">macro</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">ar</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">17</span><span class="p">:</span>   <span class="n">klass</span> <span class="o">=</span> <span class="k">case</span> <span class="n">macro</span>
</span><span class='line'>    <span class="mi">18</span><span class="p">:</span>           <span class="k">when</span> <span class="ss">:composed_of</span>
</span><span class='line'>    <span class="mi">19</span><span class="p">:</span>             <span class="no">AggregateReflection</span>
</span><span class='line'>    <span class="mi">20</span><span class="p">:</span>           <span class="k">when</span> <span class="ss">:has_many</span>
</span><span class='line'>    <span class="mi">21</span><span class="p">:</span>             <span class="no">HasManyReflection</span>
</span><span class='line'>    <span class="mi">22</span><span class="p">:</span>           <span class="k">when</span> <span class="ss">:has_one</span>
</span><span class='line'>    <span class="mi">23</span><span class="p">:</span>             <span class="no">HasOneReflection</span>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span>           <span class="k">when</span> <span class="ss">:belongs_to</span>
</span><span class='line'>    <span class="mi">25</span><span class="p">:</span>             <span class="no">BelongsToReflection</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>           <span class="k">else</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>             <span class="k">raise</span> <span class="s2">&quot;Unsupported Macro: </span><span class="si">#{</span><span class="n">macro</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="mi">28</span><span class="p">:</span>           <span class="k">end</span>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span>   <span class="n">reflection</span> <span class="o">=</span> <span class="n">klass</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">ar</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">31</span><span class="p">:</span>   <span class="n">options</span><span class="o">[</span><span class="ss">:through</span><span class="o">]</span> <span class="p">?</span> <span class="no">ThroughReflection</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">reflection</span><span class="p">)</span> <span class="p">:</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Premièrement, on trouve la classe correspondant à la macro, <code>HasManyReflection</code>
dans notre cas. Par la suite, cette classe est instanciée, avec le nom de
l&#8217;association, le scope, les options et le modèle. Les informations seront
passées à l&#8217;objet créé. <code>HasManyReflection</code> est un objet représentant
l&#8217;association. Les informations y sont stockées afin d&#8217;y être utilisées dans votre
code ou dans des gems. Pour accéder à la liste des reflections du modèle, il
est possible de faire <code>Post.reflect_on_all_associations</code>. Vous obtiendrez ce
résultat :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="c1">#&lt;ActiveRecord::Reflection::HasManyReflection:0x007fc8898aeba8</span>
</span><span class='line'> <span class="vi">@active_record</span><span class="o">=</span><span class="no">Post</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">integer</span><span class="p">),</span>
</span><span class='line'> <span class="vi">@association_scope_cache</span><span class="o">=</span><span class="p">{},</span>
</span><span class='line'> <span class="vi">@automatic_inverse_of</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span>
</span><span class='line'> <span class="vi">@constructable</span><span class="o">=</span><span class="kp">true</span><span class="p">,</span>
</span><span class='line'> <span class="vi">@foreign_type</span><span class="o">=</span><span class="s2">&quot;comments_type&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="vi">@klass</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span>
</span><span class='line'> <span class="vi">@name</span><span class="o">=</span><span class="ss">:comments</span><span class="p">,</span>
</span><span class='line'> <span class="vi">@options</span><span class="o">=</span><span class="p">{},</span>
</span><span class='line'> <span class="vi">@plural_name</span><span class="o">=</span><span class="s2">&quot;comments&quot;</span><span class="p">,</span>
</span><span class='line'> <span class="vi">@scope</span><span class="o">=</span><span class="c1">#&lt;Proc:0x007fc8896b4230@/home/dougui/.rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/bundler/gems/rails-698afe1173c6/activerecord/lib/active_record/associations/builder/collection_association.rb:75&gt;,</span>
</span><span class='line'> <span class="vi">@scope_lock</span><span class="o">=</span><span class="c1">#&lt;Mutex:0x007fc88844c368&gt;,</span>
</span><span class='line'> <span class="vi">@type</span><span class="o">=</span><span class="kp">nil</span><span class="o">&gt;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>On peut comprendre aisément l&#8217;utilité d&#8217;une telle liste.</p>

<p>À la fin de l&#8217;exécution, nous nous retrouvons dans la méthode <code>build</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">30</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">build</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">21</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">build</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">22</span><span class="p">:</span>   <span class="k">if</span> <span class="n">model</span><span class="o">.</span><span class="n">dangerous_attribute_method?</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">23</span><span class="p">:</span>     <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;You tried to define an association named </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> on the model </span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">, but &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span>                          <span class="s2">&quot;this will conflict with a method </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> already defined by Active Record. &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">25</span><span class="p">:</span>                          <span class="s2">&quot;Please choose a different association name.&quot;</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">28</span><span class="p">:</span>   <span class="n">extension</span> <span class="o">=</span> <span class="n">define_extensions</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span>   <span class="n">reflection</span> <span class="o">=</span> <span class="n">create_reflection</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">extension</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">30</span><span class="p">:</span>   <span class="n">define_accessors</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">31</span><span class="p">:</span>   <span class="n">define_callbacks</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span>   <span class="n">define_validations</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">33</span><span class="p">:</span>   <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Voici une fonction des plus intéressante. Grâce à la magie de la
métaprogrammation avec Ruby, cette fonction va définir les accesseurs.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">102</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">define_accessors</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">101</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">define_accessors</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">reflection</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">102</span><span class="p">:</span>   <span class="n">mixin</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">generated_association_methods</span>
</span><span class='line'>    <span class="mi">103</span><span class="p">:</span>   <span class="nb">name</span> <span class="o">=</span> <span class="n">reflection</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>    <span class="mi">104</span><span class="p">:</span>   <span class="n">define_readers</span><span class="p">(</span><span class="n">mixin</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">105</span><span class="p">:</span>   <span class="n">define_writers</span><span class="p">(</span><span class="n">mixin</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">106</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Comme nous pouvons le voir, le modèle est passé en argument ainsi que
<code>reflection</code> contenant toutes les informations sur l&#8217;association.</p>

<p>Voici la première fonction appelée.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">core</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">199</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Core</span><span class="o">::</span><span class="no">ClassMethods</span><span class="c1">#generated_association_methods:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">194</span><span class="p">:</span> <span class="k">def</span> <span class="nf">generated_association_methods</span>
</span><span class='line'>    <span class="mi">195</span><span class="p">:</span>   <span class="vi">@generated_association_methods</span> <span class="o">||=</span> <span class="k">begin</span>
</span><span class='line'>    <span class="mi">196</span><span class="p">:</span>     <span class="n">mod</span> <span class="o">=</span> <span class="nb">const_set</span><span class="p">(</span><span class="ss">:GeneratedAssociationMethods</span><span class="p">,</span> <span class="no">Module</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">197</span><span class="p">:</span>     <span class="kp">include</span> <span class="n">mod</span>
</span><span class='line'>    <span class="mi">198</span><span class="p">:</span>     <span class="n">mod</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">199</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">200</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Comme on peut le voir, un nouveau module <code>GeneratedAssociationMethods</code> est créé
puis inclus. Ce nouveau module est ensuite retourné pour une utilisation
ultérieure.</p>

<p>Si l&#8217;on continue l&#8217;exécution de <code>define_accessors</code>, on trouve l&#8217;appel de
<code>define_readers</code> et <code>define_writers</code>. Ces deux méthodes reçoivent, comme
argument, le nouveau module ainsi que le nom de l&#8217;association. Voici la
première :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">698</span><span class="n">afe1173c6</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">collection_association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">52</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:CollectionAssociation</span><span class="o">.</span><span class="n">define_readers</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">51</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">define_readers</span><span class="p">(</span><span class="n">mixin</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">52</span><span class="p">:</span>   <span class="k">super</span>
</span><span class='line'>    <span class="mi">53</span><span class="p">:</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">54</span><span class="p">:</span>   <span class="n">mixin</span><span class="o">.</span><span class="n">class_eval</span> <span class="o">&lt;&lt;-</span> <span class="no">CODE</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="mi">55</span><span class="p">:</span>     <span class="k">def</span> <span class="c1">#{name.to_s.singularize}_ids</span>
</span><span class='line'>    <span class="mi">56</span><span class="p">:</span>       <span class="n">association</span><span class="p">(:</span><span class="c1">#{name}).ids_reader</span>
</span><span class='line'>    <span class="mi">57</span><span class="p">:</span>     <span class="k">end</span>
</span><span class='line'>    <span class="mi">58</span><span class="p">:</span>   <span class="no">CODE</span>
</span><span class='line'>    <span class="mi">59</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Et voici la méthode de la classe parente :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">6</span><span class="n">a7ac40dabf4</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">109</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">define_readers</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">108</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">define_readers</span><span class="p">(</span><span class="n">mixin</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">109</span><span class="p">:</span>   <span class="n">mixin</span><span class="o">.</span><span class="n">class_eval</span> <span class="o">&lt;&lt;-</span> <span class="no">CODE</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">,</span> <span class="bp">__LINE__</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="mi">110</span><span class="p">:</span>     <span class="k">def</span> <span class="c1">#{name}(*args)</span>
</span><span class='line'>    <span class="mi">111</span><span class="p">:</span>       <span class="n">association</span><span class="p">(:</span><span class="c1">#{name}).reader(*args)</span>
</span><span class='line'>    <span class="mi">112</span><span class="p">:</span>     <span class="k">end</span>
</span><span class='line'>    <span class="mi">113</span><span class="p">:</span>   <span class="no">CODE</span>
</span><span class='line'>    <span class="mi">114</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>J&#8217;aime beaucoup ces méthodes. Elles définissent des fonctions dans
le module créé plus tôt. Cela revient à écrire :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">GeneratedAssociationMethods</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">comments</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="n">association</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span><span class="o">.</span><span class="n">reader</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Comme le module a été inclus à la classe du modèle, la fonction est disponible
pour celui-ci. Il est donc possible de faire un appel comme <code>post.comments</code>.
Cela revient à écrire <code>post.association(:comments).reader</code>.</p>

<p>Vous avez probablement remaqué ceci <code>&lt;&lt;-CODE, __FILE__, __LINE__ + 1</code>. Ce code
permet de spécifier une ligne et un fichier au code généré. Il est donc
possible def faire ceci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="no">Post</span><span class="o">.</span><span class="n">instance_method</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span><span class="o">.</span><span class="n">source_location</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="s2">&quot;/home/dougui/.rbenv/versions/2.1.5/lib/ruby/gems/2.1.0/bundler/gems/rails-698afe1173c6/activerecord/lib/active_record/associations/builder/association.rb&quot;</span><span class="p">,</span> <span class="mi">110</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>La méthode <code>define_writers</code> suit exactement le même principe.</p>

<p>Nous revoici donc à la méthode <code>build</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">6</span><span class="n">a7ac40dabf4</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">builder</span><span class="o">/</span><span class="n">association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">31</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="ss">Builder</span><span class="p">:</span><span class="ss">:Association</span><span class="o">.</span><span class="n">build</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">21</span><span class="p">:</span> <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">build</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">22</span><span class="p">:</span>   <span class="k">if</span> <span class="n">model</span><span class="o">.</span><span class="n">dangerous_attribute_method?</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">23</span><span class="p">:</span>     <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;You tried to define an association named </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> on the model </span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">, but &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span>                          <span class="s2">&quot;this will conflict with a method </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> already defined by Active Record. &quot;</span> <span class="p">\</span>
</span><span class='line'>    <span class="mi">25</span><span class="p">:</span>                          <span class="s2">&quot;Please choose a different association name.&quot;</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">28</span><span class="p">:</span>   <span class="n">extension</span> <span class="o">=</span> <span class="n">define_extensions</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span>   <span class="n">reflection</span> <span class="o">=</span> <span class="n">create_reflection</span> <span class="n">model</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="n">extension</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span>   <span class="n">define_accessors</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">31</span><span class="p">:</span>   <span class="n">define_callbacks</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span>   <span class="n">define_validations</span> <span class="n">model</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">33</span><span class="p">:</span>   <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Les méthodes <code>define_callbacks</code> et <code>define_validations</code> ont des noms qui parlent
d&#8217;eux même. Chacune de ces méthodes mérite un article à elle même. Je ne
m&#8217;éterniserais donc pas sur le sujet.</p>

<p>Nous pouvons donc revenir à la méthode supérieure.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">6</span><span class="n">a7ac40dabf4</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">1264</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="no">ClassMethods</span><span class="c1">#has_many:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">1264</span><span class="p">:</span> <span class="k">def</span> <span class="nf">has_many</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">scope</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="o">&amp;</span><span class="n">extension</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">1265</span><span class="p">:</span>   <span class="n">reflection</span> <span class="o">=</span> <span class="ss">Builder</span><span class="p">:</span><span class="ss">:HasMany</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="n">options</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">extension</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">1266</span><span class="p">:</span>   <span class="no">Reflection</span><span class="o">.</span><span class="n">add_reflection</span> <span class="nb">self</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">reflection</span>
</span><span class='line'>    <span class="mi">1267</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>La prochaine méthode est simplement un ajout de <code>reflection</code> à la liste connu des reflections.</p>

<p>Nous avons maintenant compris comment ActiveRecord construisait l&#8217;association,
mais pas la méthode utilisée pour rechercher les enregistrements. Pour ce
faire, je vais explorer <code>post.comments</code>.</p>

<p>Comme prévu, la première méthode est la suivante :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">110</span><span class="p">:</span> <span class="k">def</span> <span class="c1">#{name}(*args)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">111</span><span class="p">:</span>   <span class="n">association</span><span class="p">(:</span><span class="c1">#{name}).reader(*args)</span>
</span><span class='line'><span class="mi">112</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il s&#8217;agit de celle qui a été créée ci-haut. L&#8217;association est ensuite cherchée
dans le cache et la méthode <code>reader</code> lui est appliquée.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bundler</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">rails</span><span class="o">-</span><span class="mi">6</span><span class="n">a7ac40dabf4</span><span class="o">/</span><span class="n">activerecord</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">associations</span><span class="o">/</span><span class="n">collection_association</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">30</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Associations</span><span class="o">::</span><span class="no">CollectionAssociation</span><span class="c1">#reader:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span> <span class="k">def</span> <span class="nf">reader</span><span class="p">(</span><span class="n">force_reload</span> <span class="o">=</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">30</span><span class="p">:</span>   <span class="k">if</span> <span class="n">force_reload</span>
</span><span class='line'>    <span class="mi">31</span><span class="p">:</span>     <span class="n">klass</span><span class="o">.</span><span class="n">uncached</span> <span class="p">{</span> <span class="n">reload</span> <span class="p">}</span>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span>   <span class="k">elsif</span> <span class="n">stale_target?</span>
</span><span class='line'>    <span class="mi">33</span><span class="p">:</span>     <span class="n">reload</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">35</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">36</span><span class="p">:</span>   <span class="k">if</span> <span class="n">owner</span><span class="o">.</span><span class="n">new_record?</span>
</span><span class='line'>    <span class="mi">37</span><span class="p">:</span>     <span class="c1"># Cache the proxy separately before the owner has an id</span>
</span><span class='line'>    <span class="mi">38</span><span class="p">:</span>     <span class="c1"># or else a post-save proxy will still lack the id</span>
</span><span class='line'>    <span class="mi">39</span><span class="p">:</span>     <span class="vi">@new_record_proxy</span> <span class="o">||=</span> <span class="no">CollectionProxy</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">klass</span><span class="p">,</span> <span class="nb">self</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">40</span><span class="p">:</span>   <span class="k">else</span>
</span><span class='line'>    <span class="mi">41</span><span class="p">:</span>     <span class="vi">@proxy</span> <span class="o">||=</span> <span class="no">CollectionProxy</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">klass</span><span class="p">,</span> <span class="nb">self</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">42</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">43</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Si le rechargement n&#8217;est pas forcé ou si le modèle n&#8217;est pas &ldquo;vicié&rdquo;, le modèle
n&#8217;est pas rechargé. Je me suis cassé les dents sur la méthode <code>stale_target?</code>.
Je vous invite à lire <a href="https://github.com/rails/rails/issues/18633#event-234692317">cette issue</a>
pour plus de détails. Le proxy est également mémorisé. La classe
<code>CollectionProxy</code> hérite de <code>ActiveRecord::Relation</code> qui est chargée de la
relation avec la base de données. L&#8217;interface se fait grâce à Arel, mais je
pense réserver les explications pour un prochain article.</p>

<p>Si l&#8217;on fait <code>post.comments.class.name</code> on peut voir que c&#8217;est bien la classe
<code>ActiveRecord::Associations::CollectionProxy</code> qui est utilisée.</p>

<h2>Conclusion</h2>

<p>Explorer le code de Rails est un exercice assez difficile, mais toujours très
intéressant. Cette partie est probablement l&#8217;une des plus complexes de Rails.
L&#8217;exploration permet de comprendre Rails, de mieux l&#8217;utiliser de s&#8217;en inspirer
si l&#8217;on souhaite recréer un code similaire.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Conserver les changements de valeurs grâce à ActiveModel::Dirty]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/02/07/conserver-les-changements-de-valeurs-grace-a-activemodel-dirty/"/>
    <updated>2015-02-07T16:54:00-05:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/02/07/conserver-les-changements-de-valeurs-grace-a-activemodel-dirty</id>
    <content type="html"><![CDATA[<p>Dans cet article, je vous propose d&#8217;observer le comportement
d&#8217;ActiveModel::Dirty et d&#8217;en comprendre le fonctionnement en consultant le code
source. ActiveModel::Dirty est l&#8217;un des modules méconnus de Rails. Celui-ci
conserve l&#8217;historique des changements apportés aux attributs d&#8217;un objet et de
revenir en arrière si besoin.</p>

<!--more-->


<p>Tout d&#8217;abord, voici un exemple de classe à laquelle ActiveModel::Dirty est inclus :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_model&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Dirty</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">define_attribute_methods</span> <span class="ss">:name</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Rien de bien particulier ici, mis à part l&#8217;appel de la fonction
<code>define_attribute_methods</code>. Cette méthode doit être appelée à chaque fois que des
<a href="http://api.rubyonrails.org/classes/ActiveModel/AttributeMethods/ClassMethods.html">préfix, suffixe ou affixe</a>
sont utilisés avec, en argument, les attributs correspondants. En effet, comme
nous allons le voir, lors de l&#8217;inclusion de <code>ActiveModel::Dirty</code>, plusieurs
préfixe et suffixe sont créés.</p>

<h2>Les bases</h2>

<p>Comme indiqué ci-haut, <code>ActiveModel::Dirty</code> permet de vérifier si des valeurs d&#8217;un objet ont changés.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># instanciation de la classe</span>
</span><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;GCorbel&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># vérification du statut initial</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">changed?</span> <span class="c1"># false</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">name_changed?</span> <span class="c1"># false</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># signalisation d&#39;un changement</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">name_will_change!</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># modification des valeurs</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Guirec Corbel&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># vérification du statut après changement</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">changed?</span> <span class="c1"># true</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">name_changed?</span> <span class="c1"># true</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">name_changed?</span><span class="p">(</span><span class="ss">from</span><span class="p">:</span> <span class="s1">&#39;GCorbel&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;Guirec Corbel&#39;</span><span class="p">)</span> <span class="c1"># true</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">changed</span> <span class="c1"># [&quot;name&quot;]</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">changes</span> <span class="c1"># {&quot;name&quot;=&gt;[&quot;GCorbel&quot;, &quot;Guirec Corbel&quot;]}</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">name_was</span> <span class="c1"># &quot;GCorbel&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dans cet exemple, un nouvel objet est instancié et la valeur de <code>name</code> est
renseignée. Initialement, aucun changement n&#8217;est indiqué. Il est nécessaire de
spécifier que l&#8217;attribut va changer en utilisant la méthode
<code>name_will_change!</code>. Suite à cet appel, nous pouvons demander si l&#8217;objet à
subit un changement grâce à la méthode <code>changed?</code>. <code>name_changed?</code> permet
d&#8217;afficher l&#8217;information spécifique à l&#8217;attribut <code>name</code>. Il est également
possible de vérifier l&#8217;état précédent et suivant des valeurs en ajoutant les
arguments <code>from</code> et <code>to</code> à <code>name_changed?</code>. Enfin, il est possible de voir
quelles valeurs on changés grâce à <code>changed</code>, quels ont été les changements grâce
à <code>changes</code> et quel était la dernière valeur grâce à <code>name_was</code>.</p>

<h2>Afficher les dernières valeurs</h2>

<p>Il est possible de vider la liste des changements grâce à la fonction <code>changes_applied</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:changes_applied</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">changes</span> <span class="c1"># {}</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">previous_changes</span> <span class="c1"># {&quot;name&quot;=&gt;[&quot;GCorbel&quot;, &quot;Guirec Corbel&quot;]}</span>
</span></code></pre></td></tr></table></div></figure>


<p>La fonction <code>change_applied</code> est une méthode privée. Il est donc nécessaire
d&#8217;utiliser <code>send</code> pour effectuer l&#8217;appel. Comme on peut le voir dans
l&#8217;exemple, <code>changes</code> renvoi maintenant un Hash vide. Cependant, les
changements sont encore conservés, comme on peut le voir lors de l&#8217;appel de
<code>previous_changes</code>.</p>

<p>Afin de vider complètement l&#8217;historique des changements, il est possible
d&#8217;appeler la fonction <code>clear_changes_information</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:clear_changes_information</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">changes</span> <span class="c1"># {}</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">previous_changes</span> <span class="c1"># {}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Revenir en arrière</h2>

<p>Comme on peut s&#8217;y attendre, le module offre la possibilité de revenir en
arrière, et ceux grâce à la fonction <code>restore_attributes</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Guirec Corbel&quot;</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">name_will_change!</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Guirec&quot;</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">restore_attributes</span> <span class="c1"># restore les anciennes valeurs</span>
</span><span class='line'><span class="nb">p</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="c1"># &quot;Guirec Corbel&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Fonctionnement</h2>

<p>Le <a href="https://github.com/rails/rails/blob/6f8d9bd6da6349d3d179f2e72db5bc7044a8e5c1/activemodel/lib/active_model/dirty.rb">code du module</a>
est assez simple. Lors de l&#8217;appel de <code>name_will_change!</code>, la fonction est exécutée
<code>attribute_will_change</code>. Cette fonction enregistre la valeur
courante dans le hash <code>changed_attributes</code>. Cet appel doit être effectué avant
le changement de valeur. Dans le cas contraire, l&#8217;information serait perdue par
la suite.</p>

<p>Les autres fonctions sont uniquement des traitements faits sur le hash, comme la fonction <a href="https://github.com/rails/rails/blob/6f8d9bd6da6349d3d179f2e72db5bc7044a8e5c1/activemodel/lib/active_model/dirty.rb#L126-L128">#changed?</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">changed?</span>
</span><span class='line'>  <span class="n">changed_attributes</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Conclusion</h2>

<p>Et voilà! Tout en restant simple, ce module peut être utile dans certains cas.
Il est notamment utilisé par ActiveRecord pour conserver toutes les
modifications faites aux modèles. Nous étudirons le comportement d&#8217;ActiveRecord
dans un prochain article.</p>

<p>Comme souvent, en prenant quelques minutes pour lire le code source, on se rend
compte que le fonctionnement est simple. À nouveau, la magie de Rails est
démystifiée.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comment ActiveRecord reconnait la structure d'une table d'un modèle]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/01/25/comment-activerecord-reconnais-la-structure-dune-table-dun-modele/"/>
    <updated>2015-01-25T20:06:00-05:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/01/25/comment-activerecord-reconnais-la-structure-dune-table-dun-modele</id>
    <content type="html"><![CDATA[<p>ActiveRecord est probablement un des Gem qui impressionne le plus quand on
commence avec Rails. Comme par magie, ActiveRecord est capable de comprendre
seul quelle table est utilisée pour un modèle. Quand on connait Rails, on
comprend qu&#8217;il n&#8217;y a aucune magie. Dans cet article, je vais démystifier
ActiveRecord grâce à Pry.</p>

<!-- more -->


<p>Dans cet article, j&#8217;utilise la version 4.2 d&#8217;ActiveRecord.</p>

<p>Avant de commencer, il est important de comprendre comment explorer avec Pry. Je vous invite à lire <a href="http://gcorbel.github.io/blog/blog/2015/01/20/exploration-avec-pry/">sur le sujet</a> car ce sont ces techniques que je vais utiliser ici.</p>

<h2>Point de départ</h2>

<p>Comme code de départ, je vais prendre celui de <a href="http://gcorbel.github.io/blog/blog/2015/01/20/utiliser-activerecord-sans-rails/">mon article sur ActiveRecord sans Rails</a> légèrement modifié :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:age</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;dbfile.sqlite3&#39;</span><span class="p">)</span>
</span><span class='line'><span class="no">CreateUsers</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">change</span> <span class="k">unless</span> <span class="no">User</span><span class="o">.</span><span class="n">table_exists?</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pry&#39;</span><span class="p">;</span> <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'><span class="nb">p</span> <span class="no">User</span><span class="o">.</span><span class="n">columns</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span> <span class="o">[</span><span class="n">c</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">c</span><span class="o">.</span><span class="n">type</span><span class="o">]</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>À l&#8217;exécution du programme, nous avons la liste des noms de colonnes avec les
types associés. ActiveRecord à donc trouver la structure de la table.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[[</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="ss">:integer</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="ss">:string</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;age&quot;</span><span class="p">,</span> <span class="ss">:integer</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="ss">:datetime</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="ss">:datetime</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Grâce à Pry, il est possible d&#8217;entrer dans la fonction <code>User#columns</code>. Voici
cette méthode :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">step</span>
</span><span class='line'>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">attributes</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">91</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Attributes</span><span class="o">::</span><span class="no">ClassMethods</span><span class="c1">#columns:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">90</span><span class="p">:</span> <span class="k">def</span> <span class="nf">columns</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">91</span><span class="p">:</span>   <span class="vi">@columns</span> <span class="o">||=</span> <span class="n">add_user_provided_columns</span><span class="p">(</span><span class="n">connection</span><span class="o">.</span><span class="n">schema_cache</span><span class="o">.</span><span class="n">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">))</span>
</span><span class='line'>    <span class="mi">92</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Explorons donc certaines variables ou méthodes qui sont utilisées.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="vi">@columns</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="n">table_name</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;users&quot;</span>
</span><span class='line'><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="n">connection</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="c1">#&lt;ActiveRecord::ConnectionAdapters::SQLite3Adapter:0x007ff3a3c9cc20</span>
</span><span class='line'> <span class="vi">@active</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span>
</span><span class='line'> <span class="vi">@config</span><span class="o">=</span><span class="p">{</span><span class="ss">:adapter</span><span class="o">=&gt;</span><span class="s2">&quot;sqlite3&quot;</span><span class="p">,</span> <span class="ss">:database</span><span class="o">=&gt;</span><span class="s2">&quot;dbfile.sqlite3&quot;</span><span class="p">},</span>
</span><span class='line'> <span class="c1">#...</span>
</span><span class='line'><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="n">ls</span> <span class="o">-</span><span class="n">G</span> <span class="n">table_name</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:ModelSchema</span><span class="o">::</span><span class="no">ClassMethods</span><span class="c1">#methods: full_table_name_prefix  full_table_name_suffix  quoted_table_name  reset_table_name  table_name  table_name=</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">methods</span><span class="p">:</span>
</span><span class='line'>  <span class="n">pluralize_table_names</span>   <span class="n">pluralize_table_names?</span>        <span class="n">schema_migrations_table_name</span><span class="o">=</span>  <span class="n">table_name_prefix</span>   <span class="n">table_name_prefix?</span>  <span class="n">table_name_suffix</span><span class="o">=</span>
</span><span class='line'>  <span class="n">pluralize_table_names</span><span class="o">=</span>  <span class="n">schema_migrations_table_name</span>  <span class="n">schema_migrations_table_name?</span>  <span class="n">table_name_prefix</span><span class="o">=</span>  <span class="n">table_name_suffix</span>   <span class="n">table_name_suffix?</span>
</span><span class='line'><span class="n">instance</span> <span class="ss">variables</span><span class="p">:</span>
</span><span class='line'>  <span class="vi">@arel_engine</span>  <span class="vi">@attribute_methods_generated</span>  <span class="vi">@column_names</span>  <span class="vi">@columns</span>       <span class="vi">@content_columns</span>     <span class="vi">@generated_association_methods</span>  <span class="vi">@parent_name</span>        <span class="vi">@relation</span>                 <span class="vi">@sequence_name</span>
</span><span class='line'>  <span class="vi">@arel_table</span>   <span class="vi">@attributes_builder</span>           <span class="vi">@column_types</span>  <span class="vi">@columns_hash</span>  <span class="vi">@default_attributes</span>  <span class="vi">@generated_attribute_methods</span>    <span class="vi">@quoted_table_name</span>  <span class="vi">@relation_delegate_cache</span>  <span class="vi">@table_name</span>
</span><span class='line'><span class="k">class</span> <span class="ss">variables</span><span class="p">:</span>
</span><span class='line'>  <span class="vc">@@configurations</span>    <span class="vc">@@dump_schema_after_migration</span>  <span class="vc">@@maintain_test_schema</span>     <span class="vc">@@raise_in_transactional_callbacks</span>  <span class="vc">@@time_zone_aware_attributes</span>
</span><span class='line'>  <span class="vc">@@default_timezone</span>  <span class="vc">@@logger</span>                       <span class="vc">@@primary_key_prefix_type</span>  <span class="vc">@@schema_format</span>                     <span class="vc">@@timestamped_migrations</span>
</span></code></pre></td></tr></table></div></figure>


<p>Plusieurs éléments sont intéressants ici. Premièrement, les colonnes ne sont pas
encore connues par la classe étant donné que la variable <code>@columns</code> est nulle.
<code>table_name</code> est une méthode retournant la variable <code>@table_name</code> qui contient
déjà le nom de la table, &ldquo;users&rdquo; dans ce cas. <code>connection.schema_cache</code> semble contenir diverses
informations sur la base de données.</p>

<p>Avant d&#8217;exécuter <code>connection.schema_cache.columns(table_name)</code>, <code>schema_cache</code>
ne contient pas les informations sur la structure de la table &ldquo;users&rdquo; tandis
qu&#8217;elles sont présentes par la suite.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="n">connection</span><span class="o">.</span><span class="n">schema_cache</span><span class="o">.</span><span class="n">instance_variable_get</span><span class="p">(</span><span class="s1">&#39;@columns&#39;</span><span class="p">)</span><span class="o">[</span><span class="s1">&#39;users&#39;</span><span class="o">]</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="n">connection</span><span class="o">.</span><span class="n">schema_cache</span><span class="o">.</span><span class="n">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span>
</span><span class='line'><span class="c1"># ...</span>
</span><span class='line'><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="n">connection</span><span class="o">.</span><span class="n">schema_cache</span><span class="o">.</span><span class="n">instance_variable_get</span><span class="p">(</span><span class="s1">&#39;@columns&#39;</span><span class="p">)</span><span class="o">[</span><span class="s1">&#39;users&#39;</span><span class="o">]</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="c1">#&lt;ActiveRecord::ConnectionAdapters::Column:0x007fadc7cec288</span>
</span><span class='line'><span class="c1">#...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Les informations sont donc stockées dans un cache et ne sont cherchées qu&#8217;une
fois si le cache n&#8217;est pas vidé.</p>

<p>Pour aller plus loin, il est nécessaire de comprendre comment fonctionne la
méthode de recherche des colonnes.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="k">break</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:ConnectionAdapters</span><span class="o">::</span><span class="no">SchemaCache</span><span class="c1">#columns                                                                                                                                                          [7/1892]</span>
</span><span class='line'><span class="no">Breakpoint</span> <span class="mi">1</span><span class="p">:</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:ConnectionAdapters</span><span class="o">::</span><span class="no">SchemaCache</span><span class="c1">#columns (Enabled) :</span>
</span><span class='line'>
</span><span class='line'><span class="mi">42</span><span class="p">:</span> <span class="k">def</span> <span class="nf">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span>
</span><span class='line'><span class="mi">43</span><span class="p">:</span>   <span class="vi">@columns</span><span class="o">[</span><span class="n">table_name</span><span class="o">]</span> <span class="o">||=</span> <span class="n">connection</span><span class="o">.</span><span class="n">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span>
</span><span class='line'><span class="mi">44</span><span class="p">:</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="no">User</span><span class="p">):</span><span class="mi">1</span><span class="o">&gt;</span> <span class="n">continue</span>
</span><span class='line'>
</span><span class='line'><span class="no">Breakpoint</span> <span class="mi">1</span><span class="o">.</span> <span class="no">First</span> <span class="n">hit</span>
</span><span class='line'>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">connection_adapters</span><span class="o">/</span><span class="n">schema_cache</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">42</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:ConnectionAdapters</span><span class="o">::</span><span class="no">SchemaCache</span><span class="c1">#columns:</span>
</span><span class='line'>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">42</span><span class="p">:</span> <span class="k">def</span> <span class="nf">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">43</span><span class="p">:</span>   <span class="vi">@columns</span><span class="o">[</span><span class="n">table_name</span><span class="o">]</span> <span class="o">||=</span> <span class="n">connection</span><span class="o">.</span><span class="n">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">44</span><span class="p">:</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="c1">#&lt;ActiveRecord::ConnectionAdapters::SchemaCache&gt;)&gt; step</span>
</span><span class='line'>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">connection_adapters</span><span class="o">/</span><span class="n">schema_cache</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">43</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:ConnectionAdapters</span><span class="o">::</span><span class="no">SchemaCache</span><span class="c1">#columns:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">42</span><span class="p">:</span> <span class="k">def</span> <span class="nf">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">43</span><span class="p">:</span>   <span class="vi">@columns</span><span class="o">[</span><span class="n">table_name</span><span class="o">]</span> <span class="o">||=</span> <span class="n">connection</span><span class="o">.</span><span class="n">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">44</span><span class="p">:</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="c1">#&lt;ActiveRecord::ConnectionAdapters::SchemaCache&gt;)&gt; step</span>
</span><span class='line'>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">connection_adapters</span><span class="o">/</span><span class="n">sqlite3_adapter</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">389</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:ConnectionAdapters</span><span class="o">::</span><span class="no">SQLite3Adapter</span><span class="c1">#columns:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">388</span><span class="p">:</span> <span class="k">def</span> <span class="nf">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span> <span class="c1">#:nodoc:</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">389</span><span class="p">:</span>   <span class="n">table_structure</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">field</span><span class="o">|</span>
</span><span class='line'>    <span class="mi">390</span><span class="p">:</span>     <span class="k">case</span> <span class="n">field</span><span class="o">[</span><span class="s2">&quot;dflt_value&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="mi">391</span><span class="p">:</span>     <span class="k">when</span> <span class="sr">/^null$/i</span>
</span><span class='line'>    <span class="mi">392</span><span class="p">:</span>       <span class="n">field</span><span class="o">[</span><span class="s2">&quot;dflt_value&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>    <span class="mi">393</span><span class="p">:</span>     <span class="k">when</span> <span class="sr">/^&#39;(.*)&#39;$/m</span>
</span><span class='line'>    <span class="mi">394</span><span class="p">:</span>       <span class="n">field</span><span class="o">[</span><span class="s2">&quot;dflt_value&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="vg">$1</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;&#39;&#39;&quot;</span><span class="p">,</span> <span class="s2">&quot;&#39;&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">395</span><span class="p">:</span>     <span class="k">when</span> <span class="sr">/^&quot;(.*)&quot;$/m</span>
</span><span class='line'>    <span class="mi">396</span><span class="p">:</span>       <span class="n">field</span><span class="o">[</span><span class="s2">&quot;dflt_value&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="vg">$1</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s1">&#39;&quot;&quot;&#39;</span><span class="p">,</span> <span class="s1">&#39;&quot;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">397</span><span class="p">:</span>     <span class="k">end</span>
</span><span class='line'>    <span class="mi">398</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">399</span><span class="p">:</span>     <span class="n">sql_type</span> <span class="o">=</span> <span class="n">field</span><span class="o">[</span><span class="s1">&#39;type&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="mi">400</span><span class="p">:</span>     <span class="n">cast_type</span> <span class="o">=</span> <span class="n">lookup_cast_type</span><span class="p">(</span><span class="n">sql_type</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">401</span><span class="p">:</span>     <span class="n">new_column</span><span class="p">(</span><span class="n">field</span><span class="o">[</span><span class="s1">&#39;name&#39;</span><span class="o">]</span><span class="p">,</span> <span class="n">field</span><span class="o">[</span><span class="s1">&#39;dflt_value&#39;</span><span class="o">]</span><span class="p">,</span> <span class="n">cast_type</span><span class="p">,</span> <span class="n">sql_type</span><span class="p">,</span> <span class="n">field</span><span class="o">[</span><span class="s1">&#39;notnull&#39;</span><span class="o">].</span><span class="n">to_i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">402</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">403</span><span class="p">:</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="c1">#&lt;ActiveRecord::ConnectionAdapters::SQLite3Adapter&gt;)&gt; step</span>
</span><span class='line'>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">connection_adapters</span><span class="o">/</span><span class="n">sqlite3_adapter</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">516</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:ConnectionAdapters</span><span class="o">::</span><span class="no">SQLite3Adapter</span><span class="c1">#table_structure:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">515</span><span class="p">:</span> <span class="k">def</span> <span class="nf">table_structure</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">516</span><span class="p">:</span>   <span class="n">structure</span> <span class="o">=</span> <span class="n">exec_query</span><span class="p">(</span><span class="s2">&quot;PRAGMA table_info(</span><span class="si">#{</span><span class="n">quote_table_name</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span><span class="si">}</span><span class="s2">)&quot;</span><span class="p">,</span> <span class="s1">&#39;SCHEMA&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_hash</span>
</span><span class='line'>    <span class="mi">517</span><span class="p">:</span>   <span class="k">raise</span><span class="p">(</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:StatementInvalid</span><span class="p">,</span> <span class="s2">&quot;Could not find table &#39;</span><span class="si">#{</span><span class="n">table_name</span><span class="si">}</span><span class="s2">&#39;&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">structure</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>    <span class="mi">518</span><span class="p">:</span>   <span class="n">structure</span>
</span><span class='line'>    <span class="mi">519</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nous voilà à une fonction des plus intéressante. ActiveRecord execute la requête <code>PRAGMA table_info("users")</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="c1">#&lt;ActiveRecord::ConnectionAdapters::SQLite3Adapter&gt;)&gt; exec_query(&quot;PRAGMA table_info(#{quote_table_name(table_name)})&quot;, &#39;SCHEMA&#39;).to_hash</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="o">[</span><span class="p">{</span><span class="s2">&quot;cid&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;name&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="s2">&quot;type&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;INTEGER&quot;</span><span class="p">,</span> <span class="s2">&quot;notnull&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;dflt_value&quot;</span><span class="o">=&gt;</span><span class="kp">nil</span><span class="p">,</span> <span class="s2">&quot;pk&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">},</span>
</span><span class='line'> <span class="p">{</span><span class="s2">&quot;cid&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;name&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;type&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;varchar&quot;</span><span class="p">,</span> <span class="s2">&quot;notnull&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;dflt_value&quot;</span><span class="o">=&gt;</span><span class="kp">nil</span><span class="p">,</span> <span class="s2">&quot;pk&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">},</span>
</span><span class='line'> <span class="p">{</span><span class="s2">&quot;cid&quot;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">,</span> <span class="s2">&quot;name&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;age&quot;</span><span class="p">,</span> <span class="s2">&quot;type&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;integer&quot;</span><span class="p">,</span> <span class="s2">&quot;notnull&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;dflt_value&quot;</span><span class="o">=&gt;</span><span class="kp">nil</span><span class="p">,</span> <span class="s2">&quot;pk&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">},</span>
</span><span class='line'> <span class="p">{</span><span class="s2">&quot;cid&quot;</span><span class="o">=&gt;</span><span class="mi">3</span><span class="p">,</span> <span class="s2">&quot;name&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;created_at&quot;</span><span class="p">,</span> <span class="s2">&quot;type&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;datetime&quot;</span><span class="p">,</span> <span class="s2">&quot;notnull&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;dflt_value&quot;</span><span class="o">=&gt;</span><span class="kp">nil</span><span class="p">,</span> <span class="s2">&quot;pk&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">},</span>
</span><span class='line'> <span class="p">{</span><span class="s2">&quot;cid&quot;</span><span class="o">=&gt;</span><span class="mi">4</span><span class="p">,</span> <span class="s2">&quot;name&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;type&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;datetime&quot;</span><span class="p">,</span> <span class="s2">&quot;notnull&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;dflt_value&quot;</span><span class="o">=&gt;</span><span class="kp">nil</span><span class="p">,</span> <span class="s2">&quot;pk&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">}</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Avec SQLite, cette requête renvoie les informations sur la table et c&#8217;est à
partir de ces informations qu&#8217;ActiveRecord reconstitut les données.</p>

<p>Cette requête fonctionne pour SQLite mais il en existe une similaire pour
Postgres.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:12</span>
</span><span class='line'><span class="k">def</span> <span class="nf">column_definitions</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span> <span class="c1"># :nodoc:</span>
</span><span class='line'>  <span class="n">exec_query</span><span class="p">(</span><span class="o">&lt;&lt;-</span><span class="no">end_sql</span><span class="p">,</span> <span class="s1">&#39;SCHEMA&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">rows</span>
</span><span class='line'><span class="sh">      SELECT a.attname, format_type(a.atttypid, a.atttypmod),</span>
</span><span class='line'><span class="sh">             pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod</span>
</span><span class='line'><span class="sh">        FROM pg_attribute a LEFT JOIN pg_attrdef d</span>
</span><span class='line'><span class="sh">          ON a.attrelid = d.adrelid AND a.attnum = d.adnum</span>
</span><span class='line'><span class="sh">       WHERE a.attrelid = &#39;#{quote_table_name(table_name)}&#39;::regclass</span>
</span><span class='line'><span class="sh">         AND a.attnum &gt; 0 AND NOT a.attisdropped</span>
</span><span class='line'><span class="sh">       ORDER BY a.attnum</span>
</span><span class='line'><span class="no">  end_sql</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il en est de même pour MySql.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:464</span>
</span><span class='line'><span class="k">def</span> <span class="nf">columns</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span><span class="c1">#:nodoc:</span>
</span><span class='line'>  <span class="n">sql</span> <span class="o">=</span> <span class="s2">&quot;SHOW FULL FIELDS FROM </span><span class="si">#{</span><span class="n">quote_table_name</span><span class="p">(</span><span class="n">table_name</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">execute_and_free</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="s1">&#39;SCHEMA&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">result</span><span class="o">|</span>
</span><span class='line'>    <span class="n">each_hash</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">field</span><span class="o">|</span>
</span><span class='line'>      <span class="n">field_name</span> <span class="o">=</span> <span class="n">set_field_encoding</span><span class="p">(</span><span class="n">field</span><span class="o">[</span><span class="ss">:Field</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="n">sql_type</span> <span class="o">=</span> <span class="n">field</span><span class="o">[</span><span class="ss">:Type</span><span class="o">]</span>
</span><span class='line'>      <span class="n">cast_type</span> <span class="o">=</span> <span class="n">lookup_cast_type</span><span class="p">(</span><span class="n">sql_type</span><span class="p">)</span>
</span><span class='line'>      <span class="n">new_column</span><span class="p">(</span><span class="n">field_name</span><span class="p">,</span> <span class="n">field</span><span class="o">[</span><span class="ss">:Default</span><span class="o">]</span><span class="p">,</span> <span class="n">cast_type</span><span class="p">,</span> <span class="n">sql_type</span><span class="p">,</span> <span class="n">field</span><span class="o">[</span><span class="ss">:Null</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;YES&quot;</span><span class="p">,</span> <span class="n">field</span><span class="o">[</span><span class="ss">:Collation</span><span class="o">]</span><span class="p">,</span> <span class="n">field</span><span class="o">[</span><span class="ss">:Extra</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Conclusion</h2>

<p>Je pense que cette brève inspection nous suffit pour comprendre ce qu&#8217;il se
passe sous le capot. Le fonctionnement est assez simple et serait
facile à reproduire pour d&#8217;autres cas d&#8217;utilisation. Pry nous a permis, en
quelques minutes, de comprendre le code et de passer au travers l&#8217;apparente
magie de Rails.</p>

<p>Si vous voulez avoir d&#8217;autres explications sur le fonctionnement de Rails,
dites-le-moi et je ferais un processus similaire pour essayer de comprendre.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploration avec Pry]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/01/20/exploration-avec-pry/"/>
    <updated>2015-01-20T20:54:00-05:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/01/20/exploration-avec-pry</id>
    <content type="html"><![CDATA[<p>Les IDE traditionnels possèdent généralement des outils avec une interface
graphique pour déboguer. Pry, quant à lui, offre les mêmes possibilités en
utilisant des lignes de commande. Pry est un REPL (Read-Eval-Print Loop) qui
permet de naviguer dans le code afin d&#8217;expliquer un bogue ou de comprendre le
fonctionnement interne d&#8217;une Gem. Nous allons voir comment faire dans cet article.</p>

<!-- more -->


<p>Pry offre énormément de possibilités, comme éditer le code ou voir la
documentation de fonctions. Pour afficher la liste des commandes disponibles,
vous pouvez exécuter la fonction <code>help</code> dans Pry et il est possible d&#8217;exécuter
chaque commande avec l&#8217;argument <code>--help</code> pour plus de détails.</p>

<p>Cet article n&#8217;a pas pour but d&#8217;expliquer le fonctionnement interne de Pry ou
d&#8217;explorer toutes les commandes, mais se concentre uniquement sur la navigation.</p>

<h2>Exemple de code</h2>

<p>Voici un premier code d&#8217;exemple permettant de jouer avec Pry :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Cat</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say</span>
</span><span class='line'>    <span class="s2">&quot;Miaou&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">eat</span>
</span><span class='line'>    <span class="s2">&quot;MiamMiam&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">debug</span>
</span><span class='line'>    <span class="nb">require</span> <span class="s1">&#39;pry&#39;</span><span class="p">;</span> <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'>    <span class="n">say</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Cat</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;Tom&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">debug</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Affichage des variables</h2>

<p>À l&#8217;exécution du programme, Pry s&#8217;arrête à la ligne suivant <code>require 'pry'; binding.pry</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="mi">14</span><span class="p">:</span> <span class="k">def</span> <span class="nf">debug</span>
</span><span class='line'>    <span class="mi">15</span><span class="p">:</span>   <span class="nb">require</span> <span class="s1">&#39;pry&#39;</span><span class="p">;</span> <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">16</span><span class="p">:</span>   <span class="n">say</span>
</span><span class='line'>    <span class="mi">17</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>La commande <code>ls</code>, très similaire à celle de Linux pour explorer les fichiers et
dossiers, nous offre la possibilité d&#8217;explorer les objets que contexte dans
lequel nous nous trouvons.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">ls</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">Cat</span><span class="c1">#methods: debug  eat  say</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="n">instance</span> <span class="ss">variables</span><span class="p">:</span> <span class="vi">@name</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="ss">locals</span><span class="p">:</span> <span class="n">_</span>  <span class="n">__</span>  <span class="n">_dir_</span>  <span class="n">_ex_</span>  <span class="n">_file_</span>  <span class="n">_in_</span>  <span class="n">_out_</span>  <span class="n">_pry_</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il est possible de lister uniquement les méthodes avec l&#8217;argument -m.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">ls</span> <span class="o">-</span><span class="n">m</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">Cat</span><span class="c1">#methods: debug  eat  say</span>
</span></code></pre></td></tr></table></div></figure>


<p>L&#8217;argument <code>-i</code> permet de lister les variables d&#8217;instances.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">ls</span> <span class="o">-</span><span class="n">i</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="n">instance</span> <span class="ss">variables</span><span class="p">:</span> <span class="vi">@name</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>-G</code>, correspondant à la fonction grep,  permet de rechercher dans les noms. <code>ls
-G d</code> permet de chercher toutes les méthodes ou les variables contenant un &ldquo;d&rdquo;
comme ici :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">ls</span> <span class="o">-</span><span class="n">G</span> <span class="n">d</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">Cat</span><span class="c1">#methods: debug</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="n">instance</span> <span class="ss">variables</span><span class="p">:</span> <span class="vi">@name</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="ss">locals</span><span class="p">:</span> <span class="n">_dir_</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il est possible de lister les méthodes d&#8217;une variable en la spécifiant à la
commande. Tous ces éléments peuvent être combinés. Il est donc possible de
regarder toutes les méthodes contenant &ldquo;cap&rdquo; dans la variable <code>@name</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">ls</span> <span class="o">-</span><span class="n">m</span> <span class="o">-</span><span class="n">G</span> <span class="n">cap</span> <span class="vi">@name</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="nb">String</span><span class="c1">#methods: capitalize  capitalize!  shellescape</span>
</span></code></pre></td></tr></table></div></figure>


<p>La commande cd permet de changer le contexte afin d&#8217;explorer une variable.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="n">main</span>
</span><span class='line'> <span class="o">&gt;</span> <span class="nb">p</span> <span class="vi">@name</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Tom&quot;</span>
</span><span class='line'> <span class="o">&gt;</span> <span class="n">cd</span> <span class="vi">@name</span>
</span><span class='line'> <span class="o">&gt;</span> <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Tom&quot;</span>
</span><span class='line'> <span class="o">&gt;</span> <span class="n">ls</span> <span class="o">-</span><span class="n">G</span> <span class="n">encod</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="nb">String</span><span class="c1">#methods: encode  encode!  encoding  force_encoding  valid_encoding?</span>
</span><span class='line'> <span class="o">&gt;</span> <span class="n">cd</span> <span class="o">.</span><span class="n">.</span>
</span><span class='line'> <span class="o">&gt;</span> <span class="nb">p</span> <span class="nb">self</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="n">main</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Navigation dans le code</h2>

<p>Grâce à <a href="https://github.com/deivid-rodriguez/pry-byebug">pry-byebug</a>, il est possible d&#8217;exécuter pas à pas un programme. Avec
quelques commandes, je vais tenter de comprendre comment ActiveRecord communique
avec la base de données pour lister des enregistrements. Voici un exemple de
code, tiré de <a href="http://gcorbel.github.io/blog/blog/2015/01/20/utiliser-activerecord-sans-rails/">mon dernier article sur ActiveRecord</a>, qui donne un point de départ à l&#8217;inspection :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:age</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;dbfile.sqlite3&#39;</span><span class="p">)</span>
</span><span class='line'><span class="no">CreateUsers</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">change</span> <span class="k">unless</span> <span class="no">User</span><span class="o">.</span><span class="n">table_exists?</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pry&#39;</span><span class="p">;</span> <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>À l&#8217;exécution du programme, nous avons cet affichage :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/tmp/</span><span class="nb">test</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">21</span> <span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">16</span><span class="p">:</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;dbfile.sqlite3&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">17</span><span class="p">:</span> <span class="no">CreateUsers</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">change</span> <span class="k">unless</span> <span class="no">User</span><span class="o">.</span><span class="n">table_exists?</span>
</span><span class='line'>    <span class="mi">18</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">19</span><span class="p">:</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;test&#39;</span><span class="p">,</span> <span class="ss">age</span><span class="p">:</span> <span class="mi">20</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">20</span><span class="p">:</span> <span class="nb">require</span> <span class="s1">&#39;pry&#39;</span><span class="p">;</span> <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">21</span><span class="p">:</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>À partir de là, il est possible de continuer l&#8217;exécution en entrant dans la méthode <code>User#all</code> en utilisant la commande <code>step</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">step</span>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">scoping</span><span class="o">/</span><span class="n">named</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">25</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Scoping</span><span class="o">::</span><span class="ss">Named</span><span class="p">:</span><span class="ss">:ClassMethods</span><span class="c1">#all:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span> <span class="k">def</span> <span class="nf">all</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">25</span><span class="p">:</span>   <span class="k">if</span> <span class="n">current_scope</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>     <span class="n">current_scope</span><span class="o">.</span><span class="n">clone</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>   <span class="k">else</span>
</span><span class='line'>    <span class="mi">28</span><span class="p">:</span>     <span class="n">default_scoped</span>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>La méthode est maintenant affichée. Pour continuer l&#8217;exécution en restant dans
la même méthode, il est possible d&#8217;utiliser la commande <code>next</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="k">next</span>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">scoping</span><span class="o">/</span><span class="n">named</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">28</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Scoping</span><span class="o">::</span><span class="ss">Named</span><span class="p">:</span><span class="ss">:ClassMethods</span><span class="c1">#all:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">24</span><span class="p">:</span> <span class="k">def</span> <span class="nf">all</span>
</span><span class='line'>    <span class="mi">25</span><span class="p">:</span>   <span class="k">if</span> <span class="n">current_scope</span>
</span><span class='line'>    <span class="mi">26</span><span class="p">:</span>     <span class="n">current_scope</span><span class="o">.</span><span class="n">clone</span>
</span><span class='line'>    <span class="mi">27</span><span class="p">:</span>   <span class="k">else</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">28</span><span class="p">:</span>     <span class="n">default_scoped</span>
</span><span class='line'>    <span class="mi">29</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Afin d&#8217;aller plus en profondeur et voir le fonctionnement interne d&#8217;ActiveRecord, j&#8217;ai tout simplement exécuté plusieurs fois la commande <code>step</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">step</span>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">scoping</span><span class="o">/</span><span class="n">named</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">33</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Scoping</span><span class="o">::</span><span class="ss">Named</span><span class="p">:</span><span class="ss">:ClassMethods</span><span class="c1">#default_scoped:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span> <span class="k">def</span> <span class="nf">default_scoped</span> <span class="c1"># :nodoc:</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">33</span><span class="p">:</span>   <span class="n">relation</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">build_default_scope</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="o">&gt;</span> <span class="n">step</span>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">core</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">253</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Core</span><span class="o">::</span><span class="no">ClassMethods</span><span class="c1">#relation:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">252</span><span class="p">:</span> <span class="k">def</span> <span class="nf">relation</span> <span class="c1">#:nodoc:</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">253</span><span class="p">:</span>   <span class="n">relation</span> <span class="o">=</span> <span class="no">Relation</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="n">arel_table</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">254</span><span class="p">:</span>
</span><span class='line'>    <span class="mi">255</span><span class="p">:</span>   <span class="k">if</span> <span class="n">finder_needs_type_condition?</span>
</span><span class='line'>    <span class="mi">256</span><span class="p">:</span>     <span class="n">relation</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">type_condition</span><span class="p">)</span><span class="o">.</span><span class="n">create_with</span><span class="p">(</span><span class="n">inheritance_column</span><span class="o">.</span><span class="n">to_sym</span> <span class="o">=&gt;</span> <span class="n">sti_name</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">257</span><span class="p">:</span>   <span class="k">else</span>
</span><span class='line'>    <span class="mi">258</span><span class="p">:</span>     <span class="n">relation</span>
</span><span class='line'>    <span class="mi">259</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">260</span><span class="p">:</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="o">&gt;</span> <span class="n">step</span>
</span><span class='line'>    <span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">relation</span><span class="o">/</span><span class="n">delegation</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">106</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Delegation</span><span class="o">::</span><span class="no">ClassMethods</span><span class="c1">#create:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">105</span><span class="p">:</span> <span class="k">def</span> <span class="nf">create</span><span class="p">(</span><span class="n">klass</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">106</span><span class="p">:</span>   <span class="n">relation_class_for</span><span class="p">(</span><span class="n">klass</span><span class="p">)</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">klass</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">107</span><span class="p">:</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="o">&gt;</span> <span class="n">step</span>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">core</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">237</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Core</span><span class="o">::</span><span class="no">ClassMethods</span><span class="c1">#arel_table:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">236</span><span class="p">:</span> <span class="k">def</span> <span class="nf">arel_table</span> <span class="c1"># :nodoc:</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">237</span><span class="p">:</span>   <span class="vi">@arel_table</span> <span class="o">||=</span> <span class="ss">Arel</span><span class="p">:</span><span class="ss">:Table</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">table_name</span><span class="p">,</span> <span class="n">arel_engine</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">238</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>La navigation avec Pry nous a donc permis de comprendre qu&#8217;ActiveRecord utilise
Arel. Pour reprendre l&#8217;exécution normale du programme, il est possible
d&#8217;utiliser la commande <code>continue</code>.</p>

<p>La commande <code>finish</code> permet de continuer l&#8217;exécution jusqu&#8217;a ce qu&#8217;il y ait un changement
de fenêtre. Malheureusement, je la trouve très peu utile et elle me perd dans le
code plutôt qu&#8217;elle ne m&#8217;aide.</p>

<p>Toutes les commandes de navigations possèdent des alias. Il est possible de uniquement le premier caractère pour exécuter la commande et utiliser <code>s</code>, <code>n</code>, <code>f</code> et <code>c</code>.</p>

<h2>Réafficher la position actuelle</h2>

<p>L&#8217;affichage peut rapidement devenir chargé. Pour revoir la position actuelle du curseur, il est possible d&#8217;exécuter la commande <code>whereami</code>.</p>

<h2>Répititions des commandes</h2>

<p>Afin de répéter la commande précédemment utilisée en appuyant sur la touche &ldquo;Entrée&rdquo;, il est possible d&#8217;ajouter, dans le fichier <code>~/.pryrc</code>, ce code :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Pry</span><span class="p">:</span><span class="ss">:Commands</span><span class="o">.</span><span class="n">command</span> <span class="sr">/^$/</span><span class="p">,</span> <span class="s2">&quot;repeat last command&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">_pry_</span><span class="o">.</span><span class="n">run_command</span> <span class="no">Pry</span><span class="o">.</span><span class="n">history</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cet ajout va permettre de rendre beaucoup plus agréable la navigation.</p>

<h2>Breakpoints</h2>

<p>Pry nous offre la possibilité d&#8217;ajouter des points d&#8217;arrêts. Il est possible
d&#8217;arrêter l&#8217;exécution en spécifiant un fichier et une ligne.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="k">break</span> <span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">scoping</span><span class="o">/</span><span class="n">named</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">33</span>
</span></code></pre></td></tr></table></div></figure>


<p>En exécutant la fonction <code>continue</code>, le programme s&#8217;arrête donc à la ligne spécifiée.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">scoping</span><span class="o">/</span><span class="n">named</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">33</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Scoping</span><span class="o">::</span><span class="ss">Named</span><span class="p">:</span><span class="ss">:ClassMethods</span><span class="c1">#default_scoped:</span>
</span><span class='line'>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span> <span class="k">def</span> <span class="nf">default_scoped</span> <span class="c1"># :nodoc:</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">33</span><span class="p">:</span>   <span class="n">relation</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">build_default_scope</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dans ce cas, il se peut que l&#8217;on souhaite voir le comportement de la méthode
<code>merge</code> qui est appelée à la variable retournée par la méthode <code>relation</code>.
Premièrement, il est nécessaire de savoir de quels classe ou module fait la
méthode <code>merge</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">ls</span> <span class="n">relation</span> <span class="o">-</span><span class="n">G</span> <span class="n">merge</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:SpawnMethods</span><span class="c1">#methods: merge  merge!</span>
</span></code></pre></td></tr></table></div></figure>


<p>À partir de là, il est possible de placer un point d&#8217;arrêt directement sur cette méthode.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="k">break</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:SpawnMethods</span><span class="c1">#merge</span>
</span><span class='line'><span class="no">Breakpoint</span> <span class="mi">3</span><span class="p">:</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:SpawnMethods</span><span class="c1">#merge (Enabled) :</span>
</span><span class='line'>
</span><span class='line'><span class="mi">29</span><span class="p">:</span> <span class="k">def</span> <span class="nf">merge</span><span class="p">(</span><span class="n">other</span><span class="p">)</span>
</span><span class='line'><span class="mi">30</span><span class="p">:</span>   <span class="k">if</span> <span class="n">other</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="nb">Array</span><span class="p">)</span>
</span><span class='line'><span class="mi">31</span><span class="p">:</span>     <span class="nb">to_a</span> <span class="o">&amp;</span> <span class="n">other</span>
</span><span class='line'><span class="mi">32</span><span class="p">:</span>   <span class="k">elsif</span> <span class="n">other</span>
</span><span class='line'><span class="mi">33</span><span class="p">:</span>     <span class="n">spawn</span><span class="o">.</span><span class="n">merge!</span><span class="p">(</span><span class="n">other</span><span class="p">)</span>
</span><span class='line'><span class="mi">34</span><span class="p">:</span>   <span class="k">else</span>
</span><span class='line'><span class="mi">35</span><span class="p">:</span>     <span class="nb">self</span>
</span><span class='line'><span class="mi">36</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'><span class="mi">37</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>À la prochaine exécution, pry s&#8217;arrêtera au début de l&#8217;exécution de cette méthode.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">continue</span>
</span><span class='line'>
</span><span class='line'><span class="no">Breakpoint</span> <span class="mi">2</span><span class="o">.</span> <span class="no">First</span> <span class="n">hit</span>
</span><span class='line'>
</span><span class='line'><span class="ss">From</span><span class="p">:</span> <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">relation</span><span class="o">/</span><span class="n">spawn_methods</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="n">line</span> <span class="mi">29</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:SpawnMethods</span><span class="c1">#merge:</span>
</span><span class='line'>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">29</span><span class="p">:</span> <span class="k">def</span> <span class="nf">merge</span><span class="p">(</span><span class="n">other</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">30</span><span class="p">:</span>   <span class="k">if</span> <span class="n">other</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="nb">Array</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">31</span><span class="p">:</span>     <span class="nb">to_a</span> <span class="o">&amp;</span> <span class="n">other</span>
</span><span class='line'>    <span class="mi">32</span><span class="p">:</span>   <span class="k">elsif</span> <span class="n">other</span>
</span><span class='line'>    <span class="mi">33</span><span class="p">:</span>     <span class="n">spawn</span><span class="o">.</span><span class="n">merge!</span><span class="p">(</span><span class="n">other</span><span class="p">)</span>
</span><span class='line'>    <span class="mi">34</span><span class="p">:</span>   <span class="k">else</span>
</span><span class='line'>    <span class="mi">35</span><span class="p">:</span>     <span class="nb">self</span>
</span><span class='line'>    <span class="mi">36</span><span class="p">:</span>   <span class="k">end</span>
</span><span class='line'>    <span class="mi">37</span><span class="p">:</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il est possible de lister les points d&#8217;arrêts définis grâce à la commande <code>breaks</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="n">breaks</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#  Enabled  At</span>
</span><span class='line'><span class="o">---------------</span>
</span><span class='line'><span class="mi">1</span>  <span class="no">Yes</span>      <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:SpawnMethods</span><span class="c1">#merge</span>
</span><span class='line'><span class="mi">2</span>  <span class="no">Yes</span>      <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">core</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="mi">237</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il est également possible de désactiver temporairement un point d&#8217;arrêt.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="k">break</span> <span class="o">--</span><span class="n">disable</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#  Enabled  At</span>
</span><span class='line'><span class="o">---------------</span>
</span><span class='line'><span class="mi">1</span>  <span class="no">No</span>       <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:SpawnMethods</span><span class="c1">#merge</span>
</span><span class='line'><span class="mi">2</span>  <span class="no">Yes</span>      <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">core</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="mi">237</span>
</span></code></pre></td></tr></table></div></figure>


<p>On peut les désactiver tous.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="k">break</span> <span class="o">--</span><span class="n">disable</span><span class="o">-</span><span class="n">all</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#  Enabled  At</span>
</span><span class='line'><span class="o">---------------</span>
</span><span class='line'><span class="mi">1</span>  <span class="no">No</span>       <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:SpawnMethods</span><span class="c1">#merge</span>
</span><span class='line'><span class="mi">2</span>  <span class="no">No</span>       <span class="sr">/home/</span><span class="n">dougui</span><span class="o">/.</span><span class="n">rbenv</span><span class="o">/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">activerecord</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">active_record</span><span class="o">/</span><span class="n">core</span><span class="o">.</span><span class="n">rb</span> <span class="err">@</span> <span class="mi">237</span>
</span></code></pre></td></tr></table></div></figure>


<p>De la même manière, il est possible de supprimer un ou plusieurs points d&#8217;arrêts.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&gt;</span> <span class="k">break</span> <span class="o">--</span><span class="n">delete</span><span class="o">-</span><span class="n">all</span>
</span><span class='line'>
</span><span class='line'><span class="no">No</span> <span class="n">breakpoints</span> <span class="n">defined</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il est existe d&#8217;autres possibilités fournies par Pry à ce niveau, comme l&#8217;arrêt
suivant des conditions. Je vous invite à consulter la documentation pour en
savoir plus.</p>

<h2>Conclusion</h2>

<p>Pry est un outil essentiel dans le développement avec Ruby et devient plus
puissant que les outils fournis par des IDE quand on sait l&#8217;utiliser de
manière efficace. Dans les prochains articles, je vais utiliser ces techniques
pour comprendre le fonctionnement de Rails.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Utiliser ActiveRecord sans Rails]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/01/20/utiliser-activerecord-sans-rails/"/>
    <updated>2015-01-20T04:19:00-05:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/01/20/utiliser-activerecord-sans-rails</id>
    <content type="html"><![CDATA[<p>ActiveRecord est l&#8217;une des premières classes que l&#8217;on apprend à utiliser avec
Rails. Dans la vie d&#8217;un Rubyste, il est possible que l&#8217;on souhaite l&#8217;utiliser
sans Rails pour l&#8217;exécuter dans un programme en ligne de commande
ou dans une application utilisant Sinatra par exemple. Nous allons voir comment
faire en quelques lignes.</p>

<!-- more -->


<p>Cet article est piloté par l&#8217;erreur. Je vais commencer par utiliser
ActiveRecord comme je l&#8217;aurais fait avec Rails. Je vais ensuite implémenter le
code en fonction des erreurs obtenues.</p>

<h2>Code</h2>

<p>Sans plus attendre, voici une classe permettant de créer le modèle, insérer
un enregistrement et de les lister :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Guirec Corbel&#39;</span><span class="p">,</span> <span class="ss">age</span><span class="p">:</span> <span class="mi">29</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>Évidemment, Ruby nous envoi l&#8217;exception <code>uninitialized constant ActiveRecord (NameError)</code>. Pour corriger l&#8217;erreur, il suffit d&#8217;inclure le fichier <code>active_record</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Guirec Corbel&#39;</span><span class="p">,</span> <span class="ss">age</span><span class="p">:</span> <span class="mi">29</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>L&#8217;exception suivante inscrit le message <code>No connection pool for User (ActiveRecord::ConnectionNotEstablished)</code>. Il est nécessaire d&#8217;établir une nouvelle base de données.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;dbfile.sqlite3&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Guirec Corbel&#39;</span><span class="p">,</span> <span class="ss">age</span><span class="p">:</span> <span class="mi">29</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cette fois, l&#8217;erreur provient de SQLite et indique que la table <code>users</code> n&#8217;existe pas. Comme avec Rails, il est possible de faire une migration.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:age</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;dbfile.sqlite3&#39;</span><span class="p">)</span>
</span><span class='line'><span class="no">CreateUsers</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">change</span>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;Guirec Corbel&#39;</span><span class="p">,</span> <span class="ss">age</span><span class="p">:</span> <span class="mi">29</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ça marche! Et non, ça ne marche pas tout à fait. La première exécution retourne
bien l&#8217;enregistrement, mais la seconde retourne une erreur provenant de SQLite
indiquant que la table existe déjà. Il est nécessaire de créer la table
uniquement si elle n&#8217;existe pas encore. Il est possible de le faire en
utilisant la fonction <code>#table_exists?</code> de la classe <code>User</code>.</p>

<p>Voici donc le résultat final :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:age</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;dbfile.sqlite3&#39;</span><span class="p">)</span>
</span><span class='line'><span class="no">CreateUsers</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">change</span> <span class="k">unless</span> <span class="no">User</span><span class="o">.</span><span class="n">table_exists?</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Conclusion</h2>

<p>Toutes les informations contenues dans cet article peuvent être trouvées <a href="https://github.com/rails/rails/tree/master/activerecord">sur le Github de rails</a>. Comme dirait Avdi Grimm, Happy Hacking!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Inclure un objet réel dans un environnement 3d et le voir avec Oculus]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/01/18/inclure-un-objet-reel-dans-un-envrionnement-3d-et-le-voir-avec-oculus/"/>
    <updated>2015-01-18T19:34:00-05:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/01/18/inclure-un-objet-reel-dans-un-envrionnement-3d-et-le-voir-avec-oculus</id>
    <content type="html"><![CDATA[<p>Grâce à Unity 3d, il est possible de créer une scène, d&#8217;y intégrer le module
Oculus et d&#8217;importer n&#8217;importe quel modèle 3d en quelques minutes. Dans cet
article, nous allons voir comment insérer un objet réel dans un tel
environnement.</p>

<!-- more -->


<h2>Introduction</h2>

<p>Unity 3d est un outil simple pour créer des environnements 3d,
même sans avoir de formation en modélisation. Oculus fournit un package nous
permettant de nous immerger dans un monde virtuel créé avec Unity. En moins de 10 minutes, il
est possible d&#8217;intégrer Oculus dans un tel univers et d&#8217;y inclure un objet
réel. J&#8217;ai choisi de présenter la marche à suivre de manière détaillée et
d&#8217;essayer de faire en sorte que l&#8217;article soit le plus compréhensible possible.</p>

<h2>Installation et téléchargements</h2>

<p>Il existe une version d&#8217;Unity 3d pour Mac OS X et Windows. Malheureusement, il
n&#8217;existe pas de version pour Linux. Pour ma part, j&#8217;ai dû quitter mon OS préféré et aller
sur Windows. Il est possible de télécharger l&#8217;application
<a href="http://Unity3d.com/Unity/download">ici</a>. Le package d&#8217;intégration d&#8217;Oculus est
disponible <a href="https://developer.oculus.com/downloads/">ici</a>. Faites attention à
bien télécharger le fichier &ldquo;Unity 4 Integration&rdquo;. L&#8217;installation se fait comme
n&#8217;importe quel autre logiciel.</p>

<h2>Création de la scène</h2>

<p>La marche à suivre pour cette étape et la suivante est disponible <a href="https://www.youtube.com/watch?v=7kuQYcIYPvQ">sur Youtube</a>, en anglais.</p>

<p>Il est possible de créer un environnement à partir de zéro. À des fins de test,
on peut également télécharger un modèle existant grâce à l&#8217;Asset Store d&#8217;Unity
en quelques étapes faciles. Pour cela, il faut lancer l&#8217;Asset Store.</p>

<p><img src="http://img4.hostingpics.net/pics/46705220150118204656UnityUntitledNewUnityProject1PCMacLinuxStandalone.png" alt="Asset Store" /></p>

<p>Il existe des modèles gratuits comme &ldquo;Bootcamp&rdquo; que l&#8217;on peut trouver en
cliquant sur &ldquo;Complete Projects&rdquo; et cliquer sur &ldquo;Bootcamp&rdquo;.</p>

<p><img src="http://img4.hostingpics.net/pics/48129520150118204919.png" alt="Bootcamp" /></p>

<p>Une fois la page descriptive ouverte, il est possible de télécharger le projet
et de l&#8217;importer.</p>

<p><img src="http://img4.hostingpics.net/pics/47543920150118205034Importingpackage.png" alt="Import Bootcamp" /></p>

<p>Après un moment, vous pouvez voir que la structure du projet à été créée.</p>

<p><img src="http://img4.hostingpics.net/pics/79352520150118205551UnityBootcampunityNewUnityProject1PCMacLinuxStandalone.png" alt="Asset Explorer" /></p>

<p>Vous pouvez alors cliquer sur &ldquo;Bootcamp&rdquo; pour le lancer. Et voilà, la scène
virtuelle est prête. Vous pouvez lancer le jeu en cliquant sur le bouton play
dans le menu du haut.</p>

<h2>Intégration d&#8217;Oculus</h2>

<p>Pour ajouter le module Oculus au monde créé précédemment, il suffit de
décompresser le package téléchargé sur le site d&#8217;Oculus puis faire un Drag &amp;
Drop du fichier &ldquo;OculusUnityIntegration.Unitypackage&rdquo;.</p>

<p><img src="http://img4.hostingpics.net/pics/34186720150118213256UnityBootcampunityNewUnityProject1PCMacLinuxStandalone.png" alt="Intégration Oculus" /></p>

<p>Cet écran vous sera affiché :</p>

<p><img src="http://img4.hostingpics.net/pics/62659120150118213345Importingpackage.png" alt="Importation Oculus" /></p>

<p>Il suffit de cliquer sur &ldquo;import&rdquo; et d&#8217;attendre quelques secondes.</p>

<p>Le répertoire OVR sera alors créé.</p>

<p><img src="http://img4.hostingpics.net/pics/92238420150118213701UnityBootcampunityNewUnityProject1PCMacLinuxStandalone.png" alt="Asset Explorer" /></p>

<p>Naviguez dans &ldquo;OVR/Prefabs&rdquo;, vous verrez alors le fichier &ldquo;OVRPlayerController&rdquo;.
Un simple Drag &amp; Drop du navigateur vers la scène suffit pour l&#8217;ajouter au
projet. Vous pouvez positionner la caméra comme bon vous semble. La position
choisie correspondra à votre position de départ lors du lancement du jeu.</p>

<p>Pour plus d&#8217;aisance, vous pouvez supprimer le soldat mis en place dans
Bootcamp en faisant un clic droit sur &ldquo;Soldier_Locomation&rdquo; et choisir
&ldquo;Delete&rdquo;.</p>

<p>Vous pouvez d&#8217;ores et déjà lancer le jeu et utiliser Oculus!</p>

<h2>Import d&#8217;un objet réel</h2>

<p>L&#8217;étape d&#8217;intégration d&#8217;un modèle 3d se fait de manière tout aussi simple. J&#8217;ai
choisi d&#8217;importer le modèle créé dans <a href="http://gcorbel.github.io/blog/blog/2015/01/03/reconstruire-un-modele-3d-a-partir-dobjets-reels/">l&#8217;article précédent</a>.
Il s&#8217;agit de la table basse de mon salon reconstituée grâce à des photos. Je
suis allé télécharger le modèle en format .obj sur <a href="http://www.123dapp.com/catch">123D catch</a>. Pour l&#8217;intégrer, il faut faire un clic
droit sur l&#8217;explorateur d&#8217;assets et cliquer sur &ldquo;Show in Explorer&rdquo;.</p>

<p><img src="http://img11.hostingpics.net/pics/664926unnamed1.png" alt="Show in Explorer" /></p>

<p>Vous pouvez ensuite placer les fichiers dans le répertoire. Unity détectera les
nouveaux fichiers. Vous pouvez ensuite trouver votre fichier obj dans
l&#8217;explorateur et faire à nouveau un Drag &amp; Drop ce qui ajoutera le modèle 3d
dans l&#8217;environnement. Vous pouvez ensuite redimensionner l&#8217;objet pour lui
donner l&#8217;aspect souhaité. Voici donc ma table basse dans l&#8217;environnement :</p>

<p><img src="http://img4.hostingpics.net/pics/797068image841.png" alt="Résultat de l'intégration" /></p>

<p>Finalement, vous pouvez générer l&#8217;application pour la partager.</p>

<h2>Conclusion</h2>

<p>Quand j&#8217;ai acheté mes lunettes Oculus, je ne pensais pas être capable de faire
de telles créations. Heureusement, Unity nous simplifie grandement la vie et nous
donne un résultat impressionnant en quelques étapes simples.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reconstruire un modèle 3D à partir d'objets réels]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2015/01/03/reconstruire-un-modele-3d-a-partir-dobjets-reels/"/>
    <updated>2015-01-03T07:59:00-05:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2015/01/03/reconstruire-un-modele-3d-a-partir-dobjets-reels</id>
    <content type="html"><![CDATA[<p>La reconstitution d&#8217;objets 3d basée sur des images permet de créer des modèles
3d d&#8217;objets réels. Ce processus qui peut paraître complexe est en fait rendu
très simple grâce aux outils que nous allons voir dans cet article.</p>

<!-- more -->


<h2>Introduction</h2>

<p>À la base, mon objectif était de faire la cartographie 3d avec mon drone en
suivant les étapes indiquées
<a href="http://copter.ardupilot.com/wiki/common-3d-mapping/">ici</a>. La cartographie 3D
utilise la technique de reconstruction 3d à partir d&#8217;images (image based 3d
reconstruction). C&#8217;est cette technique que je vous propose d&#8217;approfondir dans
cet article.</p>

<h2>Reconstitution 3d à partir d&#8217;image vs Scanner 3d</h2>

<p>Il existe <a href="http://fr.wikipedia.org/wiki/Scanner_tridimensionnel">plusieurs types de scanneurs 3d</a>. Ceux-ci produisent
généralement des modèles de meilleure qualité que ceux obtenus en utilisant des images. Ceci
est dû au fait qu&#8217;ils utilisent différents types de données comme des lasers ou
des sonars en plus des images. La raison pour laquelle j&#8217;ai tout de même
préféré utiliser la reconstitution 3d à partir d&#8217;image est tout simplement le
prix. En effet, un scanneur 3d coûte entre 300$ et 100000$ ou plus. Bien qu&#8217;il
soit possible d&#8217;en avoir à prix réduit si l&#8217;on est prêt à faire <a href="http://3dprintingindustry.com/2014/08/05/make-3dollar-3d-scanner/">un peu de bricolage</a>,
j&#8217;ai choisi de rester dans la simplicité pour le moment.</p>

<h2>Le principe</h2>

<p>Le principe est à la fois simple et compliqué. Un algorithme complexe va
trouver des points similaires entre les différentes images et ainsi pouvoir
les replacer dans un environnement. Par triangulation, l&#8217;algorithme est capable
de reconstituer un nuage de point représentant l&#8217;objet. Il va ensuite
reconstituer la surface puis appliquer une texture avec les images.</p>

<p><img src="http://www.ismailsirma.com/wp-content/uploads/2014/12/3-sparse-reconstruction.jpg" alt="Visual SFM" /></p>

<h2>Logiciels de reconstitution 3d à partir d&#8217;images</h2>

<p>Il existe plusieurs logiciels de ce type et j&#8217;en ai essayé quelques-uns :</p>

<ul>
<li><a href="http://ccwu.me/vsfm/">VisualSFM</a> et <a href="http://www.di.ens.fr/cmvs/">CMVS</a> : Deux produits open source. Je n&#8217;ai malheureusement pas
eu le rendu souhaité;</li>
<li><a href="http://www.agisoft.com/">Agisoft Photoscan</a> : Logiciel payant très simple d&#8217;utilisation donnant un
résultat satisfaisant;</li>
<li><a href="http://www.trnio.com/">Trnio</a> : Application iPhone très simple, mais un rendu limité;</li>
<li><a href="http://www.123dapp.com/catch">Autodesk 123d catch</a> : Application web et mobile (iPhone et Androïd);</li>
</ul>


<p>Selon mon expérience, j&#8217;ai eu les meilleurs résultats avec 123d catch.
De plus, tous les calculs se font sur leurs
serveurs, il n&#8217;y a donc pas besoin de bloquer un PC pendant une heure, car le
taux d&#8217;utilisation du CPU est élevé, contrairement à VisualSFM ou Photoscan.
Enfin, Autodesk possède une gamme d&#8217;outils très complète dans le domaine. 123d
catch est un outil à la fois simple et puissant.</p>

<p>Toutefois, je n&#8217;exclus pas encore Trnio. Jan-Michael Tressler, le PDG de Trnio,
m&#8217;assure que le rendu va être amélioré prochainement. Je fais d&#8217;ailleur parti
des beta-testeurs de l&#8217;application.</p>

<p>Pour ce qui est de VisualSFM, je pense que le fait d&#8217;avoir une carte graphique
NVidia Cuda peut aider comme indiquer sur leur site.</p>

<h2>Comment faire?</h2>

<p>J&#8217;ai choisi de télécharger l&#8217;application iPhone de 123d catch étant donné que
cela évite les problèmes qu&#8217;il peut y avoir avec les différences entres les
appareils photo. Si Autodesk a fait fonctionner leur application avec un
iPhone, ça devrait fonctionner avec le mien.</p>

<p>Il faut ensuite placer un objet et en faire le tour. L&#8217;application va vous dire
comment vous placer pour prendre vos photos. L&#8217;application va ensuite vous
permettre d&#8217;uploader vos images puis va passer par plusieurs phases avant
d&#8217;avoir un modèle. Environ une demi-heure plus tard, vous aurez une
notification indiquant que le traitement et fini. Vous pouvez ensuite
visualiser et publier votre modèle.</p>

<p>Il est très important de faire attention à l&#8217;éclairage. Le choix du type
d&#8217;objet est également important. Il est nécessaire que l&#8217;objet ait des détails
sur lesquels le logiciel peut se fier pour faire son traitement. Il faut éviter
les objets avec trop de trous et de creux.</p>

<h2>Exemple</h2>

<p>Voici <a href="http://www.123dapp.com/catch/2014-10-18-23-34-9/2949812">un exemple de modélisation</a>:</p>

<p><a href="http://www.123dapp.com/catch/2014-10-18-23-34-9/2949812"><img src="http://sherpapreview-standard.s3-website-us-east-1.amazonaws.com/Preview/2014/10/13__15_12_58/IMG_3168.JPG32aece52-5720-11e4-8e14-22000b250b09Large.jpg" alt="Modélisation 3d" /></a></p>

<p>123d propose de télécharger le modèle sous 3 formats, obj, 3dp ou stl. À vous
de voir selon vos besoins.</p>

<h2>Conclusion</h2>

<p>Et voilà! Nous avons maintenant un modèle 3d d&#8217;un objet réel. Dans le prochain
article, je vous présenterais une méthode simple pour intégrer le modèle 3d
dans une scène créée avec Unity afin d&#8217;utiliser Oculus Rift.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open/Closed Principle]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2014/08/25/open-slash-closed-principle/"/>
    <updated>2014-08-25T04:52:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2014/08/25/open-slash-closed-principle</id>
    <content type="html"><![CDATA[<p>Le principe d&#8217;ouverture/fermeture, où OCP, permet de créer un code plus clair et
plus facilement modifiable. Dans cet article, nous allons voir dans quels cas il
peut être utilisé et quels en sont les bénéfices. OCP fait partie des principes
SOLID, qu&#8217;il faut absolument connaître pour devenir un meilleur programmeur.</p>

<!-- more -->


<h2>Introduction</h2>

<p>L&#8217;Open/Closed Principle est le O des principes SOLID. Il a été
introduit par <a href="http://fr.wikipedia.org/wiki/Bertrand_Meyer">Bertrand Meyer</a> (un français). Si l&#8217;on suit ce principe, un élément
dans un programme doit être &ldquo;Ouvert pour l&#8217;extension, mais fermé pour la
modification&rdquo;. On doit donc pouvoir ajouter des fonctionnalités à une classe,
un module, une fonction, etc. sans pour autant la modifier.</p>

<p>Cet article est piloté par l&#8217;exemple, beaucoup de code et peu de blabla. Il
est écrit en Ruby, mais est utilisable dans n&#8217;importe quel autre langage.</p>

<p>L&#8217;article est le deuxième d&#8217;une série concernant les principes SOLID. Le
premier porte sur <a href="http://gcorbel.github.io/blog/blog/2014/07/27/single-responsability-principle/">SRP</a>.
Dans cet article, vous trouverez des références au SRP. Si ce n&#8217;est pas déjà
fait, je vous conseille de lire le premier article avant celui-ci.</p>

<h2>Exemple 1</h2>

<p>Sans plus attendre, voici un premier exemple de code ne respectant pas OCP :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSubscription</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="no">TwitterNotifier</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">notify</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TwitterNotifier</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Notify Twitter&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">UserSubscription</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">call</span>
</span></code></pre></td></tr></table></div></figure>


<p>Comme on peut le voir, la classe <code>TwitterNotifier</code> est instanciée dans la
méthode <code>#call</code> de <code>UserSubscription</code>. Si l&#8217;on souhaite ne plus envoyer de
notifications via Twitter, mais via Facebook, il va falloir rouvrir la classe
<code>UserSubscription</code> et remplacer la classe appelée.</p>

<p>Voici un exemple faisant la même chose, mais suivant le principe.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSubscription</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">notifier</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="n">notifier</span><span class="o">.</span><span class="n">notify</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TwitterNotifier</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Notify Twitter&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">UserSubscription</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="no">TwitterNotifier</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>L&#8217;appel de <code>TwitterNotifier.new</code> se fait à un niveau supérieur et il est
possible de changer le comportement de <code>UserSubscription</code> sans changer son
implémentation.</p>

<h2>Exemple 2</h2>

<p>Si un changement au programme est demandé pour que la notification soit
différente selon le type d&#8217;utilisateur, sans suivre OCP, nous pouvons écrire
ceci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSubscription</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">notifier</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">admin?</span>
</span><span class='line'>      <span class="n">notifier</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;Admin Message&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="vi">@user</span><span class="o">.</span><span class="n">editor?</span>
</span><span class='line'>      <span class="n">notifier</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;Editor Message&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">notifier</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s2">&quot;Other Message&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TwitterNotifier</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">UserSubscription</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="no">TwitterNotifier</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>À chaque nouveau type d&#8217;utilisateur, il va falloir rouvrir la classe
<code>UserSubscription</code>. Il est plus facile de modifier la classe comme ceci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSubscription</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">notifier</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="n">notifier</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">notification_text</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TwitterNotifier</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">UserSubscription</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="no">TwitterNotifier</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>La responsabilité du choix du message à afficher a été reportée à la classe
de l&#8217;objet <code>@user</code>. En plus du fait de rendre cette fonction plus adaptable, cette
modification suit le Single Responsability Principle. Ce n&#8217;est pas à la classe
s&#8217;occupant du processus d&#8217;inscription de savoir quel message affiché à
l&#8217;utilisateur.</p>

<h2>Exemple 3</h2>

<p>Plutôt que de faire une seule notification, nous allons modifier le code pour
en envoyer plusieurs. Encore une fois, voici le code qui ne suit pas OCP :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSubscription</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="no">TwitterNotifier</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">notification_text</span><span class="p">)</span>
</span><span class='line'>    <span class="no">FacebookNotifier</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">add_message</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</span><span class='line'>    <span class="no">AdminNotifier</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">send_email</span><span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TwitterNotifier</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">UserSubscription</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">call</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dans ce cas, à chaque fois que l&#8217;on souhaite ajouter un type de notification,
il faut rouvrir la classe <code>UserSubscription</code>. Voici la version corrigée :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSubscription</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">observers</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="n">observers</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">observer</span><span class="o">|</span>
</span><span class='line'>      <span class="n">observer</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TwitterNotifier</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">user</span><span class="o">.</span><span class="n">notification_text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">observers</span> <span class="o">=</span> <span class="o">[</span><span class="no">TwitterNotifier</span><span class="o">.</span><span class="n">new</span><span class="p">,</span> <span class="no">FacebookNotifier</span><span class="o">.</span><span class="n">new</span><span class="p">,</span> <span class="no">AdminNotifier</span><span class="o">.</span><span class="n">new</span><span class="o">]</span>
</span><span class='line'><span class="no">UserSubscription</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">observers</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dans cette version, un nombre indéfini de méthodes est appelé après la création
de l&#8217;utilisateur. Il est facile d&#8217;ajouter un comportement en modifiant la
classe de plus haut niveau. De plus, la méthode appelée est toujours la même,
<code>call</code>. Cela permet d&#8217;ajouter n&#8217;importe quel type de traitement après la
création, pas seulement les notifications.</p>

<p>Dans le cas où nous souhaitons effectuer des traitements particuliers si une
notification échoue, il est possible d&#8217;extraire les observateurs dans une
classe indépendante comme ceci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSubscriptionObservers</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">observers</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@observers</span> <span class="o">=</span> <span class="n">observers</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@observers</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">observer</span><span class="o">|</span>
</span><span class='line'>      <span class="n">observer</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">UserSubscription</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">observer</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="n">observer</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TwitterNotifier</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">user</span><span class="o">.</span><span class="n">notification_text</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">observers</span> <span class="o">=</span> <span class="o">[</span><span class="no">TwitterNotifier</span><span class="o">.</span><span class="n">new</span><span class="p">,</span> <span class="no">FacebookNotifier</span><span class="o">.</span><span class="n">new</span><span class="p">,</span> <span class="no">AdminNotifier</span><span class="o">.</span><span class="n">new</span><span class="o">]</span>
</span><span class='line'><span class="n">composite_observer</span> <span class="o">=</span> <span class="no">UserSubscriptionObservers</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">observers</span><span class="p">)</span>
</span><span class='line'><span class="no">UserSubscription</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">)</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">composite_observer</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cet exemple est un peu plus complexe, mais permet une meilleure gestion de la file.</p>

<h2>Avantages</h2>

<p>Plusieurs avantages sont à noter. Le premier, et le plus évident, est la rapidité
de réaction au changement. Il va être plus facile d&#8217;ajouter des comportements
lors de l&#8217;exécution d&#8217;une fonction.</p>

<p>Comme souvent, l&#8217;utilisation des bonnes pratiques simplifie les tests. Dans un
test, il est possible de passer un tableau vide comme observers.</p>

<p>Les principes SOLID se renforcent mutuellement. Une bonne utilisation d&#8217;OCP est
une technique qui encourage l&#8217;application du SRP. Utiliser l&#8217;ensemble de ces techniques
permet de faire un code plus clair et plus résistant aux changements.</p>

<h2>Inconvénients</h2>

<p>Malheurseument, il existe au moins un inconvénient à OCP. Les comportements sont
toujours remis au niveau supérieur. Ceci rend complexe le plus au niveau,
principalement le controller. Il est possible d&#8217;ajouter des fichiers de
configuration, mais l&#8217;implémentation est plus compliquée.</p>

<h2>Quand utiliser OCP?</h2>

<p>Comme toujours dans l&#8217;utilisation de Design Patterns, il n&#8217;y a pas de règle
exacte pour l&#8217;application d&#8217;OCP. Le choix se fera selon les cas d&#8217;utilisation et
le bon sens. Il y a, cependant, quelques indications que l&#8217;on peut
suivre :</p>

<ul>
<li>Il est impossible d&#8217;anticiper tous les changements. Ne faites pas de
code inutilement complexe.</li>
<li>Lorsque l&#8217;on connaît une application ou un client, on sait quels sont les
éléments qui vont changer. Ce sont ceux-ci qu&#8217;il faut cibler.</li>
<li>Si l&#8217;on a changé une classe, il faut se demander si ce n&#8217;est pas l&#8217;occasion
d&#8217;appliquer OCP.</li>
</ul>


<h2>Conclusion</h2>

<p>J&#8217;espère que cet article vous sera utile, et que vous avez appris un nouveau
principe ou que vous avez eu un bon rafraîchissement. J&#8217;écrirais, bientôt, des
articles sur les autres principes SOLID.</p>

<p>Si vous avez des commentaires sur le fond ou la forme de l&#8217;article, n&#8217;hésitez
pas à m&#8217;en faire part.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Single Responsability Principle]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2014/07/27/single-responsability-principle/"/>
    <updated>2014-07-27T19:32:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2014/07/27/single-responsability-principle</id>
    <content type="html"><![CDATA[<p>S&#8217;il n&#8217;y avait qu&#8217;un principe de Programation Orienté Objet à retenir, ça
serait celui-ci. Dans cet article, nous allons voir comment le Single
Responsability Principle peut aider à avoir un code plus clair et plus simple à
maintenir.</p>

<!-- more -->


<h2>Introduction</h2>

<p>Le Single Responsability Principle (SRP) est le S des principes SOLID. Il a été
introduit par <a href="http://en.wikipedia.org/wiki/Robert_Cecil_Martin">Robert C. Martin</a>,
alias Uncle Bob. D&#8217;après celui-ci, une classe doit avoir une, et une seule, responsabilité.</p>

<p>Le langage utilisé dans cet article est le Ruby, mais le principe est applicable
dans tous les langages orientés objet.</p>

<h2>Exemple de violation du SRP</h2>

<p>Commençons par un exemple ayant plus d&#8217;une responsabilité.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:username</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before_create</span> <span class="ss">:generate_token</span>
</span><span class='line'>  <span class="n">after_create</span> <span class="ss">:notify_administrator</span>
</span><span class='line'>  <span class="n">after_create</span> <span class="ss">:notify_user</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_param</span>
</span><span class='line'>    <span class="n">token</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify_administrator</span>
</span><span class='line'>    <span class="no">UserMailer</span><span class="o">.</span><span class="n">mail_after_creation_to_administrator</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span><span class="o">.</span><span class="n">deliver</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify_user</span>
</span><span class='line'>    <span class="no">UserMailer</span><span class="o">.</span><span class="n">nail_after_creation_to_user</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span><span class="o">.</span><span class="n">deliver</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">generate_token</span>
</span><span class='line'>    <span class="n">token</span> <span class="o">=</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">urlsafe_base64</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Si l&#8217;on se demande quels sont les buts de cette classe, on comprend que celle-ci
s&#8217;occupe de la persistance des données, de la génération des tokens, de l&#8217;envoi
d&#8217;email après la création à l&#8217;administrateur et à l&#8217;utilisateur. Chacun de ces
buts est une responsabilité.</p>

<p>Cet exemple est très simple, mais est représentatif d&#8217;une classe qui grossit et
gagne en complexité rapidement. Il en va souvent de même pour les modèles, le M du
principe MVC. Ceux-ci sont des aspirateurs à responsabilité. Ceci est dû au
principe &ldquo;Fat model, skinny controller&rdquo; prôné par <a href="http://rubyonrails.org/">Ruby on Rails</a> entre autres.</p>

<h2>Bénéfices</h2>

<p>Pourquoi changer cette classe? Il existe plusieurs bénéfices résultant de
l&#8217;utilisation du Single Responsability Principle.</p>

<h3>Clarté</h3>

<p>Premièrement, le fait de segmenter les fonctions en plusieurs classes permet
de clarifier le code. Les classes vont être moins longues et donc, plus lisibles.
Si l&#8217;on suit <a href="http://robots.thoughtbot.com/sandi-metz-rules-for-developers">les principes de Sandi Metz</a>,
une classe ne devrait pas dépasser cent lignes. Plus c&#8217;est court, plus c&#8217;est
facile à comprendre.</p>

<h3>Diminution de l&#8217;arité</h3>

<p>Il sera plus facile d&#8217;instancier et d&#8217;utiliser ces classes. Une classe avec une
seule responsabilité aura besoin de moins d&#8217;arguments dans son constructeur.
Avec des classes simples, il devient facile de les instancier à partir de
n&#8217;importe quelle autre classe ou depuis la console.</p>

<h3>Simplifie les tests</h3>

<p>Étant donné que les classes sont plus courtes, possèdent moins de fonctions et
sont plus faciles à instancier, elles sont plus faciles à tester. Un élément
difficile à tester est un symptôme, mais pas le problème. Utiliser le SRP
permet d&#8217;avoir des tests plus efficace, plus courts et plus compréhensibles.</p>

<h3>Maintenance</h3>

<p>Les classes suivant ce principe sont également plus faciles à changer. Les
classes sont isolées les unes des autres, ce qui signifie qu&#8217;il en résulte
moins de &ldquo;code spaghetti&rdquo;. Le changement d&#8217;une responsabilité est moins
susceptible d&#8217;en impacter une autre.</p>

<h3>Duck Typing</h3>

<p>Enfin, une classe avec une seule responsabilité favorise l&#8217;utilisation du Duck
Typing étant donné qu&#8217;il peut y avoir une seule méthode. Il est possible de
nommer cette méthode de la même façon, <code>call</code> par exemple. Ce qui fait qu&#8217;il
sera toujours possible d&#8217;appeler la méthode ainsi <code>object.call</code>.</p>

<h2>Exemple de refactoring</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:username</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_param</span>
</span><span class='line'>    <span class="n">token</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">UserCreator</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="ss">user</span><span class="p">:)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>      <span class="vi">@user</span><span class="o">.</span><span class="n">token</span> <span class="o">=</span> <span class="n">generate_token</span>
</span><span class='line'>      <span class="n">send_notification</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">send_notification</span>
</span><span class='line'>    <span class="no">UserCreationNotifier</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">user</span><span class="p">:</span> <span class="vi">@user</span><span class="p">)</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">generate_token</span>
</span><span class='line'>    <span class="no">TokenGenerator</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">UserCreationNotifier</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="ss">user</span><span class="p">:)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span>
</span><span class='line'>    <span class="n">notify_administrator</span>
</span><span class='line'>    <span class="n">notify_user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify_administrator</span>
</span><span class='line'>    <span class="no">UserMailer</span><span class="o">.</span><span class="n">mail_after_creation_to_administrator</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span><span class="o">.</span><span class="n">deliver</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">notify_user</span>
</span><span class='line'>    <span class="no">UserMailer</span><span class="o">.</span><span class="n">nail_after_creation_to_user</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span><span class="o">.</span><span class="n">deliver</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TokenGenerator</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span>
</span><span class='line'>    <span class="no">SecureRandom</span><span class="o">.</span><span class="n">urlsafe_base64</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Le premier modèle a été décomposé en plusieurs classes plus petites et plus simples.
La principale différence est au niveau de la class <code>User</code>. Celle-ci est
beaucoup plus simple et n&#8217;a qu&#8217;un seul but, celui de représenter la donnée.
<code>UserCreator</code> s&#8217;occupe uniquement du processus de création d&#8217;un utilisateur et
<code>UserCreationNotifier</code> s&#8217;occupe uniquement de la notification suite à la
création. <code>TokenGenerator</code>, comment son nom l&#8217;indique, génère des tokens. Il
s&#8217;agit d&#8217;une classe très réutilisable, pouvant servir dans de nombreux cas.</p>

<h2>Only one reason to change</h2>

<p>Robert C. Martin décrit une responsabilité comme une raison de changer. Une
classe ou un module doit avoir seulement une raison de changer. Si l&#8217;on prend
la première version de la classe <code>User</code>, celle-ci devra changer si l&#8217;on décide
de générer des token différemment, ou encore si l&#8217;on change les notifications à
envoyer, ou si l&#8217;on change le type de persistance des données. Bref, cette
classe a définitivement plus d&#8217;une raison de changer.</p>

<p>Si l&#8217;on prend la proposition de refactoring en y pensant en terme de raison de
changement. La classe <code>User</code> changera uniquement si l&#8217;on décide de changer les
données à sauvegarder. La classe <code>UserCreator</code> changera si l&#8217;on modifie le
processus de création d&#8217;un utilisateur et <code>UserCreationNotifier</code> changera en
fonction des notifications que l&#8217;on veut effectuer lors de la création d&#8217;un
utilisateur. Enfin, <code>TokenGenerator</code> change si l&#8217;on souhaite changer la
manière de générer des tokens.</p>

<p>Il faut bien garder en tête que c&#8217;est la responsabilité qui doit avoir une
raison de changer et non le code. On peut imaginer dix mille raisons de
changer de code dans une classe, par exemple, changer le nom d&#8217;une fonction ou
d&#8217;une variable, mais ces changements sont acceptables. Tandis que, si l&#8217;on change
la responsabilité de la classe, on change sa raison d&#8217;être et il faut que ça
soit justifié.</p>

<h2>Personnifier la classe pour éviter les violations</h2>

<p>Un des moyens pouvant être utilisés pour déterminer si une classe a plus d&#8217;une
responsabilité peut être de la personnifier et de lui demande quelles sont ces
responsabilités. Un petit exemple de dialogue :</p>

<p>Vous &ndash; Bonjour, madame <code>User</code>, que faites-vous dans la vie?<br/>
La classe &ndash; Je m&#8217;occupe de la persistance des données ET de la notification ET du changement des tokens.</p>

<p>Le mot clé est &ldquo;ET&rdquo;. S&#8217;il y en a un dans la réponse à la question que vous avez
posé à la classe, c&#8217;est qu&#8217;elle à trop de responsabilités.</p>

<h2>Conclusion</h2>

<p>Le Single Responsability Principe est un concept très important à comprendre.
Ceci dit, il faut l&#8217;utiliser avec du bon sens. Il y a une limite au bénéfice du
principe et il faut faire attention à ne pas tomber dans l&#8217;excès.</p>

<p>Chacun des principes se renforce mutuellement. Si l&#8217;on suit celui-ci, il sera
plus facile d&#8217;en utiliser un autre. Cependant, parfois, ils peuvent être
mutuellement exclusifs. Il n&#8217;existe pas de règle magique et il faut faire
preuve de bon sens. Avec le temps et l&#8217;expérience, tout cela devient plus
naturel.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Allumer une LED lors de la réception d'un email avec Raspberry Pi]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2014/05/25/allumer-une-led-lors-de-la-reception-dun-email-avec-raspberry-pi/"/>
    <updated>2014-05-25T10:01:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2014/05/25/allumer-une-led-lors-de-la-reception-dun-email-avec-raspberry-pi</id>
    <content type="html"><![CDATA[<p>L&#8217;article a pour but d&#8217;expliquer, en détail, les principes de programmation avec le
<a href="http://www.raspberrypi.org/">Raspberry Pi</a>. Comme exemple, je vais indiquer
les différentes étapes nécessaires pour faire un petit programme en Python permettant
d&#8217;allumer une LED à la réception d&#8217;un email sur un compte GMail.</p>

<!--more-->


<h2>Raspberry Pi</h2>

<p>Commençons par la base. Le Raspberry Pi est un petit ordinateur possédant un
processeur ARM. Dans la même catégorie, il existe <a href="http://www.arduino.cc/">Arduino</a> et <a href="http://beagleboard.org/bone">BeagleBone</a>. Chacun
possède ses forces comme indiqué dans <a href="http://makezine.com/2013/04/15/arduino-uno-vs-beaglebone-vs-raspberry-pi/">cet article</a>.
Raspberry utilise une distribution de Linux. La plus
utilisé est Raspbian, une version dérivée de Debian pour Raspberry. C&#8217;est celle
que j&#8217;utilise dans cet article.</p>

<p>Dans mon cas, j&#8217;ai acheté le <a href="http://www.amazon.ca/CanaKit-Raspberry-Ultimate-Starter-Components/dp/B00GWTNYJW/ref=sr_1_1?ie=UTF8&amp;qid=1401027372&amp;sr=8-1">Raspberry Pi Ultimate Starter Kit</a>.</p>

<h2>Le circuit</h2>

<p>Mes notions d&#8217;électroniques remontent au collège et avaient besoin d&#8217;être
dépoussiérées. Le principe est simple, l&#8217;électricité est émise par le Raspberry
et suit un chemin du positif vers le négatif. Entre ces deux étapes, j&#8217;ai
placé une LED, pour la lumière, et une résistance, pour s&#8217;assurer que
le voltage ne dépasse pas une certaine puissance.</p>

<p>Le Raspberry Pi possède différents ports d&#8217;entrées et de sorties. Les signaux
électriques sont envoyés par des GPIOs. Un GPIO (General Purpose Input/Output)
est un port sans but prédéfini. Il est possible de choisir s&#8217;il s&#8217;agit d&#8217;un
port d&#8217;entrée ou de sortie ainsi que la puissance émise par ce port.</p>

<p>Il est facile de se perdre dans le numéro des GPIO et des ports. Les deux
possèdent une numérotation différente et sont souvent utilisées dans les
articles. Voici une image indiquant la liste des ports et les GPIOs
correspondants :</p>

<p><img src="http://img11.hostingpics.net/pics/720336RaspberryPiGPIOLayoutRevision1.png" alt="" /></p>

<p>Le circuit électrique que j&#8217;ai fait correspond à celui de <a href="https://projects.drogon.net/raspberry-pi/gpio-examples/tux-crossing/gpio-examples-1-a-single-led/">cet article</a>.</p>

<p>Voici le schéma suivi et adapté pour utiliser les pièces du kit :</p>

<p>|<a href="http://img15.hostingpics.net/pics/2000521ledgpiobb1267x300.jpg"></a></p>

<p>Tout d&#8217;abord, pour vérifier que le circuit fonctionne correctement, je l&#8217;ai
connecté au port du 3.3v comme montré sur cette image :</p>

<p><img src="http://img11.hostingpics.net/pics/861306photo1.jpg" alt="" /></p>

<p>Le chemin doit terminer par la mise à la terre (ground). Par convention, le
positif est représenté par des fils rouges et le négatif est représenté par des
fils noirs. Tout fonctionne, je peux passer à la création du programme.</p>

<h2>Choix du langage</h2>

<p>Le premier choix à faire lors du commencement d&#8217;un programme est celui du langage.
J&#8217;ai toujours pensé qu&#8217;un projet avec une composante électrique devait avoir
un langage comme le C, ou plus bas niveau.</p>

<p>Étant donné que Raspberry Pi fonctionne avec un Linux, il est possible
d&#8217;installer n&#8217;importe quel langage, mais je crois qu&#8217;il est bon de rester sur
les deux installés de base tout simplement parce que ce sont ceux qu&#8217;utilise la
communauté Raspberry. Ces deux langages sont le C et le Python.</p>

<p>Après un comparatif de ces langages, <strong>j&#8217;ai finalement choisi le Python</strong>. Bien que le
langage en lui-même soit plus lent, il est tellement plus rapide de programmer
avec celui-ci qu&#8217;il reste une option intéressante. Je crois qu&#8217;une bonne pratique
est de faire un programme en Python et, si la rapidité devient un point
problématique, refaire le même programme en C.</p>

<p>De toute façon, de nombreux autres éléments peuvent influencer de manière plus
importante la rapidité, comme la vitesse du réseau par exemple.</p>

<h2>Allumer une LED via un GPIO</h2>

<p>Dans cet exemple, nous allons utiliser le GPIO 17. Le choix est totalement
arbitraire et n&#8217;a aucune importance. Avant de faire un programme permettant de
se connecter à GMail, j&#8217;ai commencé par faire clignoter la LED. Voici le circuit avec le GPIO changé :</p>

<p><img src="http://img11.hostingpics.net/pics/250456photo2.jpg" alt="" /></p>

<p>Et voici le programme :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">RPIO</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'><span class="n">gpio</span> <span class="o">=</span> <span class="mi">17</span>
</span><span class='line'><span class="n">on</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'><span class="n">RPIO</span><span class="o">.</span><span class="n">setmode</span><span class="p">(</span><span class="n">RPIO</span><span class="o">.</span><span class="n">BCM</span><span class="p">)</span>
</span><span class='line'><span class="n">RPIO</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="n">RPIO</span><span class="o">.</span><span class="n">OUT</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>        <span class="n">RPIO</span><span class="o">.</span><span class="n">output</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="n">on</span><span class="p">)</span>
</span><span class='line'>        <span class="n">on</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">on</span>
</span><span class='line'>        <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
</span><span class='line'>   <span class="n">RPIO</span><span class="o">.</span><span class="n">cleanup</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pour lancer l&#8217;application, il suffit de faire <code>sudo python myfile.py</code>. Pour quitter, il faut appuyer sur CTRL+C.</p>

<p>Comme vous pouvez le constater, j&#8217;ai choisi d&#8217;utiliser
<a href="https://pypi.python.org/pypi/RPIO">RPIO</a>. Une bibliothèque simple
et efficace.</p>

<p>Deux modes permettent d&#8217;indiquer le type de numérotation que l&#8217;on souhaite.
Si l&#8217;on choisit <code>RPIO.BOARD</code>, il faudra indiquer le numéro du port et pour <code>RPIO.BCM</code> celui
du GPIO. Les deux fonctionnent aussi bien et le choix est à votre convenance.
<code>RPIO.setmode</code> permet de choisir un mode ou l&#8217;autre.</p>

<p><code>RPIO.setup</code> permet de configurer le port pour faire en sorte qu&#8217;il s&#8217;agisse
d&#8217;une entrée ou d&#8217;une sortie. Dans ce cas, il s&#8217;agit d&#8217;une sortie.</p>

<p><code>RPIO.output</code> permet d&#8217;indiquer le signal à envoyer au port. Il est possible de
lui envoyer un booléen, 0, <code>GPIO.LOW</code>, 1 ou <code>GPIO.HIGH</code>.</p>

<p>Finalement, lorsque le programme est interrompu, les GPIOs sont remis dans leurs
états initiaux.</p>

<h2>Connecter le programme avec GMail</h2>

<p>Pour connecter le programme avec GMail, j&#8217;ai utilisé <a href="https://docs.python.org/2/library/imaplib.html">imaplib</a>.
Voici le résultat final :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">RPIO</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">imaplib</span>
</span><span class='line'>
</span><span class='line'><span class="n">gmail</span> <span class="o">=</span> <span class="n">imaplib</span><span class="o">.</span><span class="n">IMAP4_SSL</span><span class="p">(</span><span class="s">&#39;imap.gmail.com&#39;</span><span class="p">,</span> <span class="s">&#39;993&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">gmail</span><span class="o">.</span><span class="n">login</span><span class="p">(</span><span class="s">&#39;username&#39;</span><span class="p">,</span> <span class="s">&#39;password&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">gmail</span><span class="o">.</span><span class="n">select</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">gpio</span> <span class="o">=</span> <span class="mi">17</span>
</span><span class='line'>
</span><span class='line'><span class="n">RPIO</span><span class="o">.</span><span class="n">setmode</span><span class="p">(</span><span class="n">RPIO</span><span class="o">.</span><span class="n">BCM</span><span class="p">)</span>
</span><span class='line'><span class="n">RPIO</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="n">RPIO</span><span class="o">.</span><span class="n">OUT</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>        <span class="n">_</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">gmail</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="s">&#39;UnSeen&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">())</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="n">RPIO</span><span class="o">.</span><span class="n">output</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="bp">False</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">RPIO</span><span class="o">.</span><span class="n">output</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
</span><span class='line'>   <span class="n">RPIO</span><span class="o">.</span><span class="n">cleanup</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Et voilà! Quand un nouveau email arrive, la LED s&#8217;allume. Si l&#8217;email
n&#8217;est plus marqué comme lu, celle-ci s&#8217;éteind.</p>

<h2>Conclusion</h2>

<p>L&#8217;application utilisée comme exemple n&#8217;est pas la plus utile du monde, mais
permet de voir les concepts de base du développement avec Raspberry Pi.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mes trucs pour augmenter sa productivité]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2014/05/19/mes-trucs-pour-augmenter-sa-productivite/"/>
    <updated>2014-05-19T04:21:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2014/05/19/mes-trucs-pour-augmenter-sa-productivite</id>
    <content type="html"><![CDATA[<p>Dans cet article, vous verrez quels outils j&#8217;utilise afin d&#8217;avoir un bon
rendement au travail en tant que développeur.</p>

<!--more-->


<h2>Système d&#8217;exploitation &ndash; Ubuntu</h2>

<p>Le choix d&#8217;un système d&#8217;exploitation est une première étape obligatoire. Comme
beaucoup, j&#8217;ai commencé par Windows. Pour le développement, ce n&#8217;est
vraiment pas l&#8217;idéal. Premièrement, dans mon langage de programmation favori, Ruby,
beaucoup d&#8217;outils sont d&#8217;abord faits pour Linux et Mac avant d&#8217;être adaptés, ou
pas, pour Windows. Ensuite, le terminal est un outil ultra important.
L&#8217;interface graphique permet d&#8217;utiliser des fonctions qui sont en fait des
lignes de commandes dans le système. Utiliser l&#8217;interface, c&#8217;est se limiter a
ce qu&#8217;on a voulu de nous proposer. Linux et Mac sont vraiment plus orientés
pour l&#8217;utilisation du terminal.</p>

<p>Linux vs Mac : Il n&#8217;y a pas de bonnes ou de mauvaises réponses. Je n&#8217;utilise pas
Mac, car il ne correspond pas à ma philosophie. Je n&#8217;ai pas envie d&#8217;être
contrôlé par Apple et j&#8217;adore l&#8217;Open Source. Si vous préférez payer, libre a
vous.</p>

<p>Pourquoi Ubuntu? Tout simplement parce que c&#8217;est la distribution la plus connue.</p>

<h2>Terminal &ndash; ZSH</h2>

<p><a href="http://www.zsh.org/">Zsh</a> est un remplaçant de Bash. Zsh offre
un meilleur affichage et une navigation plus rapide en ne tenant pas
compte des majuscules dans les noms de fichiers et de dossiers. Une meilleure
intégration avec git est disponible. Si votre répertoire est versionné, vous
verrez quelle est la branche courante.
<a href="https://github.com/robbyrussell/oh-my-zsh">Oh-My-Zsh</a> offre
des configurations préfaites pour certains outils comme git ou rails.</p>

<p>Il est possible de configurer Zsh. Si l&#8217;on n&#8217;aime pas le fait d&#8217;ignorer la
casse, une seule ligne suffit dans le fichier <code>.zshrc</code> pour changer le
comportement.</p>

<h2>Éditeur de texte &ndash; VIM</h2>

<p>Choisir un éditeur de texte est crucial. Certains préfèrent de gros IDE comme
Eclipse. D&#8217;autres préfèrent des outils plus simples comme Sublime Text ou
Notepad++. J&#8217;ai testé beaucoup de solutions avant de choisir. J&#8217;ai finalement
choisi <a href="http://www.vim.org/">Vim</a> et j&#8217;en suis bien content.</p>

<p>J&#8217;encourage tout le monde à essayer Vim. Les premiers pas sont difficiles, mais
<strong>le jeu en vaut la chandelle</strong>. Cela fait plus d&#8217;un an que je n&#8217;utilise que
cet éditeur. Je pense avoir augmenté ma productivité, mais je sais qu&#8217;il me
reste encore des milliers de trucs à apprendre. Vim, c&#8217;est tout un monde.</p>

<p>La philosophie de Vim vise a éviter l&#8217;utilisation de la souris. En effet, le
temps passé à bouger la main entre la souris le clavier peut paraitre anodin,
mais on le fait des centaines de fois et il s&#8217;agit d&#8217;une totale perte de temps.
L&#8217;apprentissage de Vim demande de casser les habitudes.</p>

<p>Vim est un éditeur modal. Six modes sont disponibles :</p>

<ul>
<li>Normal : Offre des tonnes de raccourcis afin de naviguer, de supprimer, de
copier, etc.;</li>
<li>Insertion : Permets d&#8217;écrire du texte;</li>
<li>Commande : Permets d&#8217;effectuer des commandes dans le fichier ou sur l&#8217;OS;</li>
<li>Mode Visuel : Permets d&#8217;effectuer des sélections;</li>
<li>Mode Sélection : Permets d&#8217;éditer un texte sélectionné;</li>
<li>Mode Ex : Comme le mode commande, mais ne retourne pas en mode normal après
l&#8217;exécution de la commande;</li>
</ul>


<p>Le fait d&#8217;utiliser des modes permet d&#8217;avoir plus de possibilités, car chaque mode
posséder ces propres raccourcis et fonctionnalités.</p>

<p>Il existe de nombreux plug-ins Vim. Voici une liste de mes préférés :</p>

<ul>
<li><a href="https://github.com/Valloric/YouCompleteMe">YouCompleteMe</a> : Auto complétion puissante;</li>
<li><a href="https://github.com/kien/ctrlp.vim">ctrlp</a> : Fuzzyfinder permettant la navigation rapide entre les fichiers;</li>
<li><a href="https://github.com/rking/ag.vim">ag.vim</a> : Permets de faire des recherches rapides;</li>
<li><a href="https://github.com/SirVer/ultisnips">ultisnips</a> : Ajoute des fragments de code rapidement;</li>
</ul>


<p>Vim est hautement personnalisable. L&#8217;édition du fichier <code>~/.vimrc</code> permet
d&#8217;ajouter de la configuration, mais également de faire vos propres bouts de
code. Il est également possible d&#8217;ajouter des raccourcis et de configurer les
combinaisons du clavier pour exécuter plus rapidement certaines actions.</p>

<h2>TMUX</h2>

<p><a href="http://tmux.sourceforge.net/">Tmux</a> permets d&#8217;exploiter plusieurs terminaux au sein d&#8217;un seul écran. On peut
créer des panneaux, qui vont séparer l&#8217;écran en plusieurs parties, chaque
partie étant un terminal où il est possible d&#8217;exécuter des commandes. Il est
possible de regrouper les panneaux en fenêtres. La liste des fenêtres est
affichée en bas de l&#8217;écran. Il est également possible de créer des sessions
qui sont un regroupement de fenêtres. À tout instant, il est possible de
naviguer entre les différents éléments à l&#8217;aide de raccourcis clavier.</p>

<p>Mon truc préféré avec Tmux est de le faire parler avec Vim. J&#8217;ai ajouté le
plug-in <a href="https://github.com/kikijump/tslime.vim/blob/master/tslime.vim">tslime</a>, qui permet d&#8217;envoyer une commande dans un panneau.
Je l&#8217;utilise pour exécuter les tests. Lorsque j&#8217;appuie sur les touches <code>,t</code>,
Vim lance l&#8217;exécution de Rspec, avec le fichier et la ligne courante, et lance
le test dans un panneau séparé. Cela me permet d&#8217;exécuter les tests rapidement
tout en restant asynchrone et en me permettant d&#8217;afficher et de garder la trace
de l&#8217;erreur lorsque je modifie mon code.</p>

<p>J&#8217;utilise également <a href="https://github.com/tmuxinator/tmuxinator">Tmuxinator</a>, qui permet d&#8217;enregistrer des configurations Tmux
et de démarrer une session avec un certain affichage et exécuter certaines
commandes au démarrage. Je l&#8217;ai configuré pour accéder rapidement aux projets
sur lesquels je travaille. La commande <code>tmuxinator c</code>, me mettra dans le dossier
du projet et créera trois panneaux, le principal avec Vim, le second lancera le
serveur et le dernier est libre pour pouvoir exécuter des commandes. J&#8217;ai créé
un raccourci avec Zsh pour simplement taper <code>ti c</code>.</p>

<h2>Taper au clavier</h2>

<p>Utiliser les bons outils ne sert à rien si l&#8217;on tape avec deux doigts. J&#8217;ai
suivi <a href="http://www.typingweb.com/">un cours en ligne</a> pour apprendre à taper. Cela fait vraiment une grosse
différence. Le fait de taper de manière plus fluide permet non seulement
d&#8217;aller plus vite, mais de garder plus facilement le fil de ses idées. En
suivant des entrainements, même les personnes tapant déjà rapidement peuvent
s&#8217;améliorer.</p>

<p>Taper vite est utile quand on code, mais pas seulement. C&#8217;est également un
avantage lors de l&#8217;écriture d&#8217;un email, d&#8217;un document, ou d&#8217;un article de blog.</p>

<h2>Formation</h2>

<p>Taper vite avec les bons outils ne sert à rien si l&#8217;on tape n&#8217;importe quoi. Je
suis inscrit à plusieurs sites permettant de m&#8217;améliorer dans ma pratique. J&#8217;ai
également lu des livres le développement. Enfin, écrire des articles de blog
sur des articles que je connais, en plus de me permettre de partager ma connaissance,
me donne une rigueur qui me permet d&#8217;approfondir certaines connaissances.</p>

<p>Le plus important est de ne jamais arrêter de coder. C&#8217;est avec la pratique
qu&#8217;on s&#8217;améliore. Il faut également prendre des temps pour regarder de plus
près ce que l&#8217;on fait et se poser les bonnes questions.</p>

<p>Petit conseil pour les unilingues francophones : N&#8217;ayez pas peur de l&#8217;anglais.
C&#8217;est dur au début, mais avec le temps ça va mieux. De plus, quand on lit des
livres sur le développement, c&#8217;est possible de comprendre le sens en lisant le
code.</p>

<h2>Conclusion</h2>

<p>Les outils que j&#8217;utilise sont à mon goût et je suis certain que je vais en
découvrir d&#8217;autres avec le temps. Je crois que l&#8217;important est de tester et de
faire ses propres choix.</p>

<p>Vous pouvez voir mes fichiers de configuration sur <a href="https://github.com/GCorbel/dotfiles">le repo GitHub</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Design Principles et Design Patterns avec Rails]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2014/05/18/principes-et-design-patterns-avec-rails/"/>
    <updated>2014-05-18T06:52:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2014/05/18/principes-et-design-patterns-avec-rails</id>
    <content type="html"><![CDATA[<p>Losque l&#8217;on débute notre vie de programmeur, l&#8217;architecture du code est secondaire. En prenant de l&#8217;expérience, on se rend compte qu&#8217;une application a besoin d&#8217;une structure quand sa taille augmente. Il est possible de développer ces propres techniques, mais d&#8217;autres personnes sont passées par le même chemin et certains ont publié leurs solutions. Ce sont les Principes et les Design Patterns. Cet article en présente quelques-unes appliquées à Ruby on Rails.</p>

<!--more-->


<h2>Introduction</h2>

<p>Cet article est une brève présentation des Design Principles, ou Principes de Conception, et des Design Patterns, ou Patrons de Conception. Le but de cet article n&#8217;est pas de détailler chacun de ces concepts, mais de donner un bref aperçu de ceux-ci. D&#8217;autres articles suivront pour rentrer plus dans les détails.</p>

<h2>Programation Orienté Objet</h2>

<p>Un des principes fondamentaux, en Ruby comme dans d&#8217;autres langages, est la Programation Orienté Objet (POO). Il est parfaitement possible d&#8217;écrire une application en code en procédural, mais il est vite difficile de la maintenir efficacement. Afin de faire une séparation logique du code, il est possible de le regrouper en classes et en méthodes. Pour faire une bonne séparation, il est important de bien comprendre quels sont les principes existants. De plus, la POO est bien plus que mettre des bouts de cote dans des catégories. Il s&#8217;agit d&#8217;une manière de penser le code.</p>

<h2>Design Principles</h2>

<p>Dans le livre <a href="http://www.amazon.ca/Practical-Object-Oriented-Design-Ruby-Primer/dp/0321721330">Practical Object-Oriented Design in Ruby: An Agile Primer</a>, Sandi Metz définit qu&#8217;une application doit être TRUE :</p>

<ul>
<li><strong>T</strong>ransparent : Il doit être facile de comprendre quels vont être les impacts lors du changement d&#8217;un code;</li>
<li><strong>R</strong>easonable : Le coût du changement doit impliquer un gain proportionnel;</li>
<li><strong>U</strong>sable : Le code doit pouvoir être utilisé dans différents contextes;</li>
<li><strong>E</strong>xemplary : Le code produit doit encourager une meilleure qualité de la conception;</li>
</ul>


<p>Pour nous aider dans cette démarche, <a href="http://en.wikipedia.org/wiki/Robert_Cecil_Martin">Robert C. Martin</a> a défini cinq Design Principles communément acceptés. Une application doit être <a href="http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29">SOLID</a>, l&#8217;acronyme pour :</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Single_responsibility_principle"><strong>S</strong>ingle Responsability Principle</a> &ndash; Une classe doit avoir une seule responsabilité;</li>
<li><a href="http://en.wikipedia.org/wiki/Open/closed_principle"><strong>O</strong>pen/Close Priciple</a> &ndash; Une classe doit être ouverte pour l&#8217;extension, mais fermée pour la modification;</li>
<li><a href="http://en.wikipedia.org/wiki/Liskov_substitution_principle"><strong>L</strong>iskov Substition Principle</a> &ndash; Les types dérivés doivent pouvoir être remplacés par leur type de base;</li>
<li><a href="http://en.wikipedia.org/wiki/Interface_segregation_principle"><strong>I</strong>nterface Segregation Principle</a> &ndash; Une classe ne doit pas dépendre d&#8217;une interface contenant des méthodes qu&#8217;elle n&#8217;utilise pas;</li>
<li><a href="http://en.wikipedia.org/wiki/Dependency_inversion_principle"><strong>D</strong>ependency Inversion Principle</a> &ndash; Un module de haut niveau ne doit pas dépendre d&#8217;un module de bas niveau;</li>
</ul>


<p>Ce qu&#8217;il y a d&#8217;intéressant avec ces principes, c&#8217;est qu&#8217;ils se renforcent mutuellement. Si l&#8217;on en utilise certains, les autres vont être plus évidents ce qui encouragera une meilleure qualité.</p>

<p>Rails prône également les principes de <a href="http://en.wikipedia.org/wiki/Convention_over_Configuration">Convention Over Configuration</a>, qui vise a simplifier le développement en utilisant des conventions de nommage plutôt que des fichiers de configuration, et <a href="http://en.wikipedia.org/wiki/Don%27t_Repeat_Yourself">Don&rsquo;t Repeat Yourself</a>, qui dit que l&#8217;on ne devrait jamais dupliquer du code.</p>

<p>Le plus discutable prôné par Rails est Fat models, skinny controllers. Celui-ci vise à garder le contrôleur le plus simple possible et à ajouter la logique dans le modèle. Pourquoi discutable? Parce que je crois, comme d&#8217;autres, que les modèles deviennent trop complexes et difficiles à tester.</p>

<p>Il n&#8217;est pas toujours facile de faire l&#8217;unanimité sur des techniques. Heureusement, <a href="http://david.heinemeierhansson.com/2012/rails-is-omakase.html">Rails is Omakasee</a>. Le framework est suffisamment souple pour nous laisser le choix des techniques à utiliser. La &ldquo;Rails Way&rdquo; est de faire du &ldquo;Fat models, skinny controllers&rdquo; mais il est tout à fait possible d&#8217;introduire d&#8217;autres concepts et de créer de bons vieux purs objets Ruby.</p>

<h2>Desgin Patterns</h2>

<p>Les Design Patterns sont des types de solutions répondant à certains problèmes communs. En programmation web, je crois que le plus connu est <a href="http://en.wikipedia.org/wiki/MVC">MVC</a>. Celui-ci veut qu&#8217;une requête HTTP soit traitée par un routeur qui instancie un contrôleur qui a pour but d&#8217;instancier les modèles et de renvoyer une vue.</p>

<p>Il existe bien d&#8217;autres Design Patterns. Avec Rails, mes préférés sont :</p>

<ul>
<li>Service Objects &ndash; Permet d&#8217;éviter la boulimie des modèles en extrayant les responsabilités dans des classes séparées;</li>
<li>Form Objects &ndash; Simplifie le traitement des formulaires complexes;</li>
<li>Decorators &ndash; Permet d&#8217;ajouter aux modèles des fonctions relatives à la vue;</li>
<li>Presenters &ndash; Extrait les logiques complexes de la vue dans une classe;</li>
</ul>


<p>Lorsque l&#8217;on s&#8217;attaque à un problème, il est intelligent de se renseigner d&#8217;abord sur les solutions qui existent. Une fois appliqué, on apprend à reconnaitre les patterns et l&#8217;on applique plus vite les solutions. Le temps passé à faire la recherche initiale est largement rentabilisé avec le temps.</p>

<h2>Quand utiliser un Design Pattern?</h2>

<p>Savoir quand utiliser un Design Pattern, peut paraitre anodin, mais il y a un autre principe à suivre <a href="http://en.wikipedia.org/wiki/Keep_it_simple">Keep It Simple and Stupid</a> (KISS). Ils doivent être utilisés quand il y a un problème ou en prévision d&#8217;un problème. Parfois, il ne sert à rien de se casser la tête. Si le programme est propre et facile a modifier, il ne sert à rien d&#8217;utiliser des techniques complexes.</p>

<h2>Quel Design Pattern utiliser?</h2>

<p>Il est parfois difficile de choisir quel Design Pattern utilisé. D&#8217;autant plus que certains peuvent se contredire. Par exemple, il est difficile d&#8217;utiliser Tell Don&rsquo;t Ask dans un contrôleur quand vient le temps de savoir quelle vue retourner. Malheureusement, il n&#8217;y a pas de règles simples. Il faut savoir utiliser le bon sens et prendre des décisions.</p>

<h2>L&#8217;impact psychologique</h2>

<p>Je crois que l&#8217;impact psychologique des principes et des Design Patterns est non négligeable. C&#8217;est beaucoup plus agréable de travailler sur un projet bien structuré que de modifier du code sans savoir quels vont être les répercussions ou devoir modifier une grosse partie du code. Ruby est un langage fait pour rendre le développeur heureux. Chacun sait qu&#8217;un développeur moins stressé sera plus productif.</p>

<p>De plus, une bonne qualité de code fera de vous fier de ce que vous faite. C&#8217;est super encourageant de rentrer tous les matins au travail en sachant que l&#8217;on fait du bon travail.</p>

<h2>Conclusion</h2>

<p>Ces sujets sont beaucoup trop complexes pour être écrit en un seul article. Ils mériteraient des livres. D&#8217;ailleurs, il y en a un paquet. Parmi ceux-ci, on peut citer <a href="http://www.amazon.ca/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882">Clean Code: A Handbook of Agile Software Craftsmanship</a> de Robert C. Martin, <a href="http://www.amazon.ca/Practical-Object-Oriented-Design-Ruby-Primer/dp/0321721330">Practical Object-Oriented Design in Ruby: An Agile Primer</a>, de Sandi Metz ou <a href="http://www.amazon.ca/Head-First-Design-Patterns-Freeman/dp/0596007124">Head First Design Patterns</a> de Eric Freeman, Elisabeth Robson, Bert Bates et Kathy Sierra.</p>

<p>Comme indiqué ci-dessus, je vais bientôt écrire plusieurs articles et Design Pattern, so <a href="https://twitter.com/GuirecCorbel">Follow me on Twitter</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DigitalOcean vs Heroku - Round 2]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2014/04/22/digitalocean-vs-heroku-round-2/"/>
    <updated>2014-04-22T04:44:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2014/04/22/digitalocean-vs-heroku-round-2</id>
    <content type="html"><![CDATA[<p>Dans <a href="http://gcorbel.github.io/blog/blog/2014/03/29/benchmark-entre-digitalocean-et-heroku/">un article précédent</a>, j&#8217;ai publier une comparaison entre un serveur <a href="https://www.digitalocean.com/">DigitalOcean</a> à 10$ pour 1go de RAM et la version gratuite de <a href="http://heroku.com/">Heroku</a> comportant 512mo de RAM. Plusieurs personnes m&#8217;ont demandé de faire le même test en augmentant le nombre de dyno de Heroku. Voici donc les résultats des tests demandés.</p>

<!--more-->


<h2>Un dino? Non, un dyno.</h2>

<p>Avant d&#8217;aller plus loin, j&#8217;ai voulu comprendre le concept de dyno. Avant de connaitre Heroku, ce que je connaissais qui s&#8217;en rapprochait le plus c&#8217;était ça :</p>

<p><img src="http://img4.hostingpics.net/pics/330071denverdernierdinosaure.jpg" alt="" /></p>

<p>Pour Heroku, un dyno n&#8217;a rien à voir avec notre ami Denver. Un dyno est un processus qui va répondre à une requête. Plus on a de dyno, plus on va être capable de répondre à plusieurs requêtes en même temps.</p>

<h2>Les tests</h2>

<p>Comment dans l&#8217;article précédent, j&#8217;ai effectué les tests avec <a href="https://github.com/GCorbel/lescollectionneursassocies/tree/9d88ded4810575a37ac6ad5e7ceaaeeb93b40b17">cette application</a>. J&#8217;ai également utilisé les mêmes outils et les mêmes scénarios qu&#8217;auparavant. Encore une fois, il s&#8217;agit de la même application pour DigitalOcean et pour Heroku.</p>

<h2>Les chiffres</h2>

<p>Les tests en quelques chiffres : 50 visiteurs simulés utilisant 3 scénarios différents pendant 5 minutes.</p>

<h3>DigitalOcean</h3>

<p>Petit rappel sur les chiffres obtenus avec DigitalOcean :</p>

<p><img src="http://img11.hostingpics.net/pics/410612Slection007.png" alt="" /></p>

<p>Un temps de réponse plutôt correct.</p>

<p>Avec DigitalOcean, j&#8217;utilise un swapfile de 2go et voici ma config Unicorn :</p>

<pre><code>worker_processes 3
timeout 120
preload_app true
</code></pre>

<h3>Heroku</h3>

<p>Et voilà le moment tant attendu. Voici les mêmes tests faits avec 2 dyno de 512mo :</p>

<p><img src="http://img4.hostingpics.net/pics/326257Slection008.png" alt="" /></p>

<p>Quoi?????? Je ne m&#8217;attendais vraiment pas à ça. J&#8217;ai essayé avec 1 dyno de 1go et 2 dyno de 1go et j&#8217;ai toujours sensiblement le même résultat. Le temps offert par Heroku est vraiment désastreux. Comme on peut le voir, le temps est majoritairement passé dans la queue.</p>

<p>Pour en savoir plus, j&#8217;ai contacté le support Heroku. Tout d&#8217;abord, pour avoir de meilleur log au niveau de la mémoire, ils m&#8217;ont conseillé d&#8217;utiliser <a href="https://devcenter.heroku.com/articles/log-runtime-metrics">log-runtime-metrics</a>. J&#8217;ai fait un test en allant sur 5 pages de mon site et voici le résultat :</p>

<pre><code>2014-04-12T11:27:41.246260+00:00 heroku[web.1]: State changed from starting to up

2014-04-12T11:27:44.647222+00:00 heroku[web.1]: source=web.1 dyno=heroku.16040091.5565eaf7-72e9-4184-b1d8-46a1612f8e49 sample#memory_total=229.98MB sample#memory_rss=229.96MB sample#memory_cache=0.01MB sample#memory_swap=0.00MB sample#memory_pgpgin=64372pages sample#memory_pgpgout=5498pages

2014-04-12T11:27:52.633087+00:00 app[web.1]: Started GET "/fr/pages/accueil" for 208.114.164.25 at 2014-04-12 11:27:52 +0000
2014-04-12T11:27:56.361888+00:00 app[web.1]: Started GET "/fr/pages/accueil" for 208.114.164.25 at 2014-04-12 11:27:56 +0000
2014-04-12T11:28:03.386496+00:00 app[web.1]: Started GET "/fr/pages/acheter-vendre" for 208.114.164.25 at 2014-04-12 11:28:03 +0000

2014-04-12T11:28:04.772151+00:00 heroku[web.1]: source=web.1 dyno=heroku.16040091.5565eaf7-72e9-4184-b1d8-46a1612f8e49 sample#memory_total=423.66MB sample#memory_rss=423.34MB sample#memory_cache=0.33MB sample#memory_swap=0.00MB sample#memory_pgpgin=113959pages sample#memory_pgpgout=5501pages

2014-04-12T11:28:08.154309+00:00 app[web.1]: Started GET "/fr/pages/services-aux-collectionneurs" for 208.114.164.25 at 2014-04-12 11:28:08 +0000
2014-04-12T11:28:13.728267+00:00 app[web.1]: Started GET "/fr/pages/faq" for 208.114.164.25 at 2014-04-12 11:28:13 +0000

2014-04-12T11:28:25.099729+00:00 heroku[web.1]: source=web.1 dyno=heroku.16040091.5565eaf7-72e9-4184-b1d8-46a1612f8e49 sample#load_avg_1m=0.00
2014-04-12T11:28:25.100040+00:00 heroku[web.1]: source=web.1 dyno=heroku.16040091.5565eaf7-72e9-4184-b1d8-46a1612f8e49 sample#memory_total=444.60MB sample#memory_rss=444.18MB sample#memory_cache=0.42MB sample#memory_swap=0.00MB sample#memory_pgpgin=119319pages sample#memory_pgpgout=5501pages
2014-04-12T11:28:44.717755+00:00 heroku[web.1]: source=web.1 dyno=heroku.16040091.5565eaf7-72e9-4184-b1d8-46a1612f8e49 sample#load_avg_1m=0.00
2014-04-12T11:28:44.718017+00:00 heroku[web.1]: source=web.1 dyno=heroku.16040091.5565eaf7-72e9-4184-b1d8-46a1612f8e49 sample#memory_total=445.48MB sample#memory_rss=445.06MB sample#memory_cache=0.42MB sample#memory_swap=0.00MB sample#memory_pgpgin=119550pages sample#memory_pgpgout=5507pages
2014-04-12T11:29:04.898773+00:00 heroku[web.1]: source=web.1 dyno=heroku.16040091.5565eaf7-72e9-4184-b1d8-46a1612f8e49 sample#load_avg_1m=0.00
2014-04-12T11:29:04.899057+00:00 heroku[web.1]: source=web.1 dyno=heroku.16040091.5565eaf7-72e9-4184-b1d8-46a1612f8e49 sample#memory_total=445.48MB sample#memory_rss=445.06MB sample#memory_cache=0.42MB sample#memory_swap=0.00MB sample#memory_pgpgin=119550pages sample#memory_pgpgout=5507pages
</code></pre>

<p>Comme on peut le voir, juste après le démarrage, 230mo étaient utilisés. J&#8217;ai visité les 5 pages et la mémoire c&#8217;est chargée à 444mo. Ensuite, j&#8217;ai eu rapidement des <a href="https://devcenter.heroku.com/articles/error-codes#r14-memory-quota-exceeded">Memory quota exceeded</a>. Je n&#8217;ai aucun problème similaire avec DigitalOcean.</p>

<p>Le support m&#8217;a ensuite indiqué que mon application était gourmande en mémoire. Ils m&#8217;ont conseillé d&#8217;utiliser la gem <a href="https://github.com/noahd1/oink">oink</a>. Cette gem permet d&#8217;indiquer quels sont les actions les plus utilisées. Je n&#8217;ai pas appris plus grand-chose de plus qu&#8217;avec NewRelic.</p>

<h2>Un problème dans mon application?</h2>

<p>Il y a effectivement plusieurs éléments qui peuvent prendre de la mémoire. Tout d&#8217;abord, c&#8217;est une application Rails. Rails n&#8217;est certainement pas ce qu&#8217;il y a de plus léger au monde. Ensuite, j&#8217;utilise beaucoup de cache. J&#8217;imagine qu&#8217;il y a beaucoup d&#8217;éléments stockés en mémoire dans ces cas-là. Ensuite, il s&#8217;agit d&#8217;une application d&#8217;une bonne taille avec plusieurs requêtes SQL par page maire rien d&#8217;extrême.</p>

<p>Comme je l&#8217;ai dit plus tôt, j&#8217;ai comparé les deux serveurs avec la même application. Si j&#8217;avais vraiment un problème de mémoire dans celle-ci, j&#8217;imagine que les problèmes auraient dû être les mêmes. Or, je n&#8217;ai aucune erreur de mémoire dans Digital Ocean.</p>

<h2>Conclusion</h2>

<p>Je crois qu&#8217;il est assez clair que Heroku perd la bataille. Si quelqu&#8217;un à d&#8217;autres résultats ou aimerai m&#8217;indiquer comment corriger d&#8217;éventuels problèmes.</p>

<p>Un autre avantage que je trouve à DigitalOcean est le fait d&#8217;avoir une plus grande accessibilité au système. Au début, le fait d&#8217;avoir un environnement prêt en quelques secondes avec Heroku est génial, mais lorsque l&#8217;on veut aller plus loin, je trouve que l&#8217;on rencontre beaucoup de limites. Avec DigitalOcean, nous avons le plein contrôle de l&#8217;OS. De plus, si l&#8217;on suit un bon guide, déployer une application n&#8217;est pas bien compliqué.</p>

<p>Pour finir, la chanson que j&#8217;ai dans la tête depuis le début de l&#8217;écriture de l&#8217;article :</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/dFY-VWey5xw "></iframe></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Benchmark entre DigitalOcean et Heroku]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2014/03/29/benchmark-entre-digitalocean-et-heroku/"/>
    <updated>2014-03-29T14:10:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2014/03/29/benchmark-entre-digitalocean-et-heroku</id>
    <content type="html"><![CDATA[<p>Aujourd&#8217;hui, j&#8217;avais envie de mettre des chiffres sur un fait que je pensais avéré. J&#8217;ai voulu faire un comparitif simple entre l&#8217;offre gratuite d&#8217;Heroku et celle la plus populaire de Digital Ocean.</p>

<h2>L&#8217;application</h2>

<p>L&#8217;application utilisée dans ce cas est une application Ruby on Rails standard utilisant Rails 3.2.17, Ruby 2.1.0 et Unicorn 4.8.2.</p>

<h2>Les outils mesures</h2>

<p>Pour mesurer les performences du serveur, j&#8217;ai utilisé <a href="http://newrelic.com/">New Relic</a>. Il s&#8217;agit d&#8217;un excellent utilitaire qui indique en détail les performences d&#8217;une application ainsi les différents points sensibles.</p>

<p>J&#8217;ai également utilisé <a href="http://loadimpact.com/">Load Impact</a>, un outil au fonctionnement assez simple. Il suffit d&#8217;enregistrer un scénario pour pouvoir le rejouer en simulant un certain nombre de visiteurs. Load Impact fait en sorte d&#8217;augmenter peu à peu le nombre de visiteurs sur le site comme on peu le voir sur cette image :</p>

<p><img src="http://img11.hostingpics.net/pics/628030Slection004.png"></p>

<p>Grâce à cet outil, j&#8217;ai pu créer des scénarios et les jouers en simulant 50 visiteurs. L&#8217;application comporte 3 types d&#8217;utilisateurs, j&#8217;ai donc créé un scénario dans chacun de ces cas.</p>

<h2>Les chiffres</h2>

<h3>DigitalOcean</h3>

<p>J&#8217;ai utilisé l&#8217;offre à 10$ par mois, la plus populaire,  de Digital Ocean pour effectuer ce test et voici le résultat :</p>

<p><img src="http://img11.hostingpics.net/pics/410612Slection007.png"></p>

<p>Comme on peut le voir, le temps de réponse est de moins de 800ms. Le temps de traitement est partagé entre Ruby et la base de données. Je crois qu&#8217;il s&#8217;agit d&#8217;un comportement normal et d&#8217;un bon temps de réponse.</p>

<h3>Heroku</h3>

<p>J&#8217;ai répété exactement le même test avec Heroku et voici le résultat :</p>

<p><img src="http://img11.hostingpics.net/pics/502656Slection006.png"></p>

<p>On voit clairement qu&#8217;Heroku est le grand perdant du duel. Je me doutais déjà du résultat, mais je ne pensais pas que la différence serait aussi probante. Le temps de réponse est supérieur à 25 secondes. La majeure partie du temps est prise dans la queue de traitement. On peut également voir qu&#8217;Heroku a eu du mal à se remettre du test sur ce graphique :</p>

<p><img src="http://img11.hostingpics.net/pics/804402Slection005.png"></p>

<p>Avant 10h, il s&#8217;agit du trafic normal. La pointe verte, entre 10h et 10h30 représente le pic lors du test effectué. On peut voir qu&#8217;après cette pointe, tous les temps sont très longs et la situation n&#8217;estpas revenue à la normale.</p>

<h2>Conclusion</h2>

<p>De part cet exemple, on peut voir assez clairement que DigitalOcean est plus rapide qu&#8217;Heroku.</p>

<p>Les résultats obtenus ici <strong>ne montrent pas définitivement qu&#8217;Heroku est moins efficace que DigitalOcean</strong>. Premièrement, je suis loin d&#8217;avoir fait des tests exhaustifs. Pour aller plus loin, il serait nécessaire de faire des essais avec les offres payantes d&#8217;Heroku ainsi qu&#8217;en essayant d&#8217;autres scénarios et cas d&#8217;utilisation. De plus, Heroku reste génial comme environnement de développement et de test.</p>

<p>Comme d&#8217;habitude, je ne prétend pas détenir la vérité. Si vous avez d&#8217;autres arguments permettant de confirmer ou d&#8217;infirmer ma conclusion, s&#8217;il vous plaît, laissez vos commentaires.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PyLeapMouse: Commandez votre OS par la voix ET les mouvements]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2013/11/01/sbire-et-leapmotion-commandez-votre-os-par-la-voix-et-les-mouvements/"/>
    <updated>2013-11-01T19:34:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2013/11/01/sbire-et-leapmotion-commandez-votre-os-par-la-voix-et-les-mouvements</id>
    <content type="html"><![CDATA[<p>Suite à <a href="http://gcorbel.github.io/blog/blog/2013/10/27/sbire-dites-ce-que-vous-voulez-il-le-fera/">mon article et ma vidéo</a> sur <a href="https://github.com/gcorbel/sbire">Sbire</a>, je poursuis dans ma lancée pour expliquer comment j&#8217;ai modifier le projet PyLeapMouse pour coupler LeapMotion et Sbire.
<a href="https://www.leapmotion.com/">LeapMotion</a> est un très bon outil permettant de détecter les mouvements. L&#8217;une des fonctionnalités évidentes que l&#8217;on imagine rapidement avec LeapMotion est de remplacer la souris pour commander le système d&#8217;exploitation.
Pour cela, il existe le projet <a href="https://github.com/openleap/PyLeapMouse">openleap/PyLeapMouse</a>. Celui-ci émule le pointeur de la souris et permet de simuler les clics.
Dans cet article, vous verrez le cheminement que j&#8217;ai effectué pour contrôler l&#8217;OS avec LeapMotion.</p>

<!--more-->


<h2>Exemple d&#8217;utilisation</h2>

<p>Avant de commencer, voici une courte vidéo montrant l&#8217;utilisation de PyLeapMouse et Sbire.</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/l1BxiD1dx5s "></iframe></div>


<h2>Diriger la souris/Executer des commandes?</h2>

<p>Mon objectif principal pour cette application est de contrôler l&#8217;OS avec LeapMotion. En tant qu&#8217;adepte de l&#8217;Open-Source, j&#8217;ai premièrement cherché s&#8217;il existait un projet le permettant. Je suis tombé sur <a href="https://github.com/archetipo/leapmouse">LeapMouse</a>, écrit en C. J&#8217;ai rapidement vu les problèmes existants pour diriger la souris. Pour ma part, je mettais plus de 10 secondes pour réussir à fixer un bouton ou une icône. Sur ce point, l&#8217;utilisation classique de la souris est beaucoup plus efficace.
De plus, il est nécessaire de maintenir la main à une certaine distance du contrôleur. On doit donc la maintenir en hauteur ce qui est rapidement fatigant.</p>

<p>Le fait d&#8217;effectuer des commandes en fonction des mouvements m&#8217;a paru une méthode plus efficace et plus précise. Tout d&#8217;abord, une commande doit être actionnée par un mouvement court. Il n&#8217;est donc pas nécessaire de maintenir la main en suspension pendant une longue période. De plus, le besoin de précision est moindre ce qui rend l&#8217;utilisation plus efficace.</p>

<h2>Pourquoi Python?</h2>

<p>Il existe plusieurs SDK pour LeapMotion. Malheureusement pour moi, Ruby, mon langage préféré, n&#8217;est pas disponible officiellement. J&#8217;avais donc l&#8217;embarras du choix des langages.</p>

<p>LeapMouse étant écrit en C, je me suis demandé pourquoi choisir ce langage plutôt qu&#8217;un autre. Il est vrai que ce langage possède l&#8217;avantage d&#8217;être plus bas niveau. La plupart des outils disponibles dans les autres langages sont des dérivés. Également, le C est très avantageux au niveau de la performance. Ces deux points constituent des avantages non négligeables pour l&#8217;utilisation du C.</p>

<p>Cela faisait longtemps que je n&#8217;avais pas utilisé le C. Étant habitué à Ruby, j&#8217;avais un peu d&#8217;aprioris à utiliser un langage moins moderne. Je pensais avoir plus de mal avec la syntaxe, mais finalement c&#8217;est la difficulté à inclure des librairies qui m&#8217;a repoussé. Grâce à bundler, Ruby possède une manière très simple de gérer les dépendances d&#8217;un projet. En C, c&#8217;est parfois aussi simple de refaire des bouts de code. Réinventer la roue n&#8217;étant pas ce que je préfère, j&#8217;ai abandonné le C et pris la résolution de l&#8217;utiliser uniquement si je n&#8217;ai pas le choix. Évidemment, c&#8217;est une conclusion très personnelle. Libre à chacun de choisir autre chose.</p>

<p>Python est un langage tout aussi moderne que Ruby. La gestion des dépendances se fait également très bien avec Pip. Bien que la philosophie soit différente que celle de Ruby, il est très facile de passer de l&#8217;un à l&#8217;autre. De plus, c&#8217;est toujours agréable de découvrir autre chose et de changer un peu.</p>

<h2>Pourquoi PyLeapMouse?</h2>

<p>Ensuite, j&#8217;ai choisi de modifier <a href="https://github.com/openleap/PyLeapMouse">openleap/PyLeapMouse</a>. Tout d&#8217;abord PyLeapMouse possède déjà un bon nombre de fonctionnalités. De plus, il est relativement populaire et possède déjà une bonne communauté. Ce choix fut assez rapide. Je crois que c&#8217;est le projet le plus abouti concernant le contrôle de la souris avec LeapMotion.</p>

<h2>Mon développement sur PyLeapMouse</h2>

<p>Malgré le fait que PyLeapMouse soit fonctionnel, l&#8217;utiliser pour déplacer le pointeur de la souris est très fastidieux. Ceci est dû aux limites expliquées dans <a href="http://gcorbel.github.io/blog/blog/2013/10/12/leap-motion-le-point-de-vue-dun-developpeur/">cet article</a>.</p>

<p>J&#8217;ai donc fait un fork du projet pour ajouter la possibilité d&#8217;exécuter des commandes en fonctions des mouvements effectuées. Le fonctionnement est assez simple. PyLeapMouse va lire un fichier <code>commands.ini</code> comme celui-ci :</p>

<pre><code>[screentap]

[keytap]

[swiperight]
1finger: rhythmbox-client --next

[swipeleft]
1finger: rhythmbox-client --previous

[clockwise]
1finger: sbire start
2finger: sbire start
3finger: sbire start
4finger: sbire start
5finger: sbire start

[counterclockwise]
1finger: sbire stop
2finger: sbire stop
3finger: sbire stop
4finger: sbire stop
5finger: sbire stop
</code></pre>

<p>À chaque changement détecté par LeapMotion, le programme recherche dans une liste d&#8217;objets avec des classes comme celle-ci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">KeytapCommand</span><span class="p">():</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;keytap&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">applicable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">frame</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span><span class="p">(</span><span class="n">frame</span><span class="o">.</span><span class="n">gestures</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">type</span> <span class="o">==</span> <span class="n">Leap</span><span class="o">.</span><span class="n">Gesture</span><span class="o">.</span><span class="n">TYPE_KEY_TAP</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Chaque commande possède un nom, permettant de l&#8217;identifier, et une fonction <code>applicable</code> permettant de voir si les conditions sont réunies pour exécuter la commande en fonction de la variable <code>frame</code> représentant les données passées par LeapMotion.</p>

<p>Ensuite, il va rechercher dans la configuration quelle commande il doit exécuter en fonction du nombre de doigts reconnus et du mouvement. Pour plus de détails, vous pouvez voir le <a href="https://github.com/openleap/PyLeapMouse/blob/master/MotionControl.py">code complet sur GitHub</a>.</p>

<p>Cette amélioration rend l&#8217;utilisation plus efficace, mais n&#8217;est pas fiable à 100%. Il y a très souvent des imperfections dans les mouvements détectés.</p>

<p>Afin d&#8217;augmenter la précision, il existe des projets comme <a href="https://github.com/roboleary/LeapTrainer.js">LeapTrainer</a>. Celui-ci fait en sorte que le système apprend les mouvements. Il est ensuite possible d&#8217;exporter le mouvement appris puis de l&#8217;importer dans d&#8217;autres outils. C&#8217;est effectivement un très bon projet, mais cela manque encore d&#8217;efficacité.</p>

<h2>Pourquoi lier avec Sbire?</h2>

<p>Malrgès le fait que lier les commandes aux mouvements soit plus précis, il reste encore beaucoup d&#8217;erreurs. C&#8217;est pour cette raison qu&#8217;il est mieux de le coupler avec Sbire. Sbire est plus précis et les possibilités sont plus vastes. LeapMotion possède une petite liste de mouvements prédéfinis. Sbire, quant à lui, peut reconnaitre un nombre illimité de phrases pour chercher les commandes à exécuter.</p>

<h2>Conclusion</h2>

<p>Je pense que le couplage des deux outils est plutôt bien. Cependant, je trouve qu&#8217;utiliser un raccourci clavier pour démarrer et arrêter Sbire est encore une solution plus efficace. Je crois que LeapMotion a encore du travail à faire pour rendre l&#8217;outil 100% fonctionnel.</p>

<p>À sa décharge, LeapMotion est encore en développement et les développeurs se font une priorité d&#8217;augmenter la précision dans les prochaines versions. Je suis encore plein d&#8217;espoir pour cet outil.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sbire : Dites ce que vous voulez, il le fera]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2013/10/27/sbire-dites-ce-que-vous-voulez-il-le-fera/"/>
    <updated>2013-10-27T13:24:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2013/10/27/sbire-dites-ce-que-vous-voulez-il-le-fera</id>
    <content type="html"><![CDATA[<p>Sbire est un outil permettant d&#8217;exécuter des commandes grâce à la voix. Le principe est simple. Vous taper une commande pour l&#8217;enregistrement d&#8217;une phrase avec un micro et vous taper une seconde commande pour terminer l&#8217;enregistrement. Suite à cela, Sbire reconnait votre voix et exécute la commande associée.</p>

<!--more-->


<h2>Sbire en action</h2>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/Fvu9tS0lsYE "></iframe></div>


<h2>Comment ça marche?</h2>

<p>Il s&#8217;agit d&#8217;un programme écrit en Ruby. Celui-ci fait appel à sox pour faire un enregistrement audio. Il fait ensuite appel à Google voice en y joignant le fichier et y récupère le résultat en format JSon. Ce résultat est ensuite traité et la commande trouvée est exécutée.</p>

<h2>Contibuer</h2>

<p>Évidemment, je suis ouvert à toute remarque et suggestion. Les contributions sont également les bienvenues. Vous pouvez les soumettes sur <a href="https://github.com/GCorbel/sbire">Github</a>.</p>

<h2>Plus d&#8217;informations</h2>

<p>Pour des informations sur l&#8217;installation, l&#8217;utilisation et la configuration, rendez-vous sur la <a href="https://github.com/GCorbel/sbire">page Github du projet</a>.</p>

<h2>Encore plus d&#8217;informations</h2>

<p>Si vous avez d&#8217;autres questions, contactez moi par email, à guirec.corbel@gmail.com, ou sur <a href="https://twitter.com/GuirecCorbel">twitter</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Table ronde en ligne]]></title>
    <link href="http://GCorbel.github.io/blog/blog/2013/10/22/table-ronde-en-ligne/"/>
    <updated>2013-10-22T19:47:00-04:00</updated>
    <id>http://GCorbel.github.io/blog/blog/2013/10/22/table-ronde-en-ligne</id>
    <content type="html"><![CDATA[<p style="text-align:center;">Le <strong>dimanche 3 novembre à 17h</strong> (heure française) aura lieu la première édition d&#8217;une <strong>table ronde en ligne</strong>.</p>

<!--more-->


<h2>Principe</h2>

<p>Une table ronde est une discussion, avec plusieurs participants, sur un sujet.
Les participants ne doivent pas forcement être des experts dans le domaine, mais doivent avoir de connaissance pour pouvoir en parler.
La discussion doit se faire dans une ambiance cordiale. Personne ne prétend détenir la solution à tous les problèmes et chacun doit pouvoir exprimer son point de vue en gardant l&#8217;esprit ouvert.</p>

<h2>Sujet</h2>

<p>Le sujet de la première discussion sera <strong>les designs patterns</strong> avec Ruby on Rails.</p>

<p>Voici le plan de la première rencontre :</p>

<ul>
<li>Présentation des participants;</li>
<li>Définition d&#8217;un design pattern;</li>
<li>Discussion à propos des designs patterns connus :

<ul>
<li>Fat model/Skinny controllers</li>
<li>Service objects</li>
<li>Form objects</li>
<li>DCI</li>
</ul>
</li>
<li>Quels design pattern utilisez-vous?</li>
<li>Varia;</li>
</ul>


<p>Le plan pourra varier selon l&#8217;avancement de la discussion. Aucune limite de temps n&#8217;est imposée pour la première rencontre.</p>

<h2>Où sera publiée la discussion?</h2>

<p>La discussion sera publiée sur YouTube. Je publierais la vidéo sur <a href="http://www.youtube.com/channel/UCRSzJI-E_8cqKwFH3KsZDxQ">ma chaine YouTube</a>. Je publierai l&#8217;adresse sur twitter.</p>

<h2>Comment pourrais-je rejoindre la discussion?</h2>

<p>La discussion se fera par Google Hangout. Je donnerais le lien aux participants une heure avant la rencontre.
Assurez-vous d&#8217;avoir correctement installé le plug-in nécessaire pour participer ainsi qu&#8217;un micro et une webcam qui fonctionne avant de participer.</p>

<h2>Comment participer?</h2>

<p>Si vous êtes disponible à l&#8217;heure et à la date indiquée, vous pouvez demander à participer en m&#8217;envoyant un courriel à <a href="&#109;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#x67;&#x75;&#x69;&#x72;&#101;&#x63;&#46;&#x63;&#x6f;&#x72;&#x62;&#x65;&#x6c;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;">&#103;&#117;&#105;&#114;&#x65;&#99;&#x2e;&#x63;&#x6f;&#114;&#98;&#101;&#x6c;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a> ou en privé <a href="https://twitter.com/GuirecCorbel">mon compte Twitter</a>.</p>

<p>À dimanche!</p>
]]></content>
  </entry>
  
</feed>
